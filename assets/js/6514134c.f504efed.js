"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[81530],{35318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(27378);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return t?a.createElement(k,r(r({ref:n},p),{},{components:t})):a.createElement(k,r({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var c=2;c<l;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},44932:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return m},metadata:function(){return k},toc:function(){return h},default:function(){return g}});var a=t(35318),i=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))s.call(n,t)&&p(e,t,n[t]);if(o)for(var t of o(n))c.call(n,t)&&p(e,t,n[t]);return e};const d={id:"easing",title:"Easing"},m=void 0,k={unversionedId:"easing",id:"version-0.60/easing",title:"Easing",description:"The Easing module implements common easing functions. This module is used by Animated.timing() to convey physically believable motion in animations.",source:"@site/versioned_docs/version-0.60/easing.md",sourceDirName:".",slug:"/easing",permalink:"/docs/0.60/easing",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/easing.md",tags:[],version:"0.60",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"easing",title:"Easing"},sidebar:"version-0.60/api",previous:{title:"Dimensions",permalink:"/docs/0.60/dimensions"},next:{title:"\ud83d\udea7 ImageEditor",permalink:"/docs/0.60/imageeditor"}},h=[{value:"Predefined animations",id:"predefined-animations",children:[],level:3},{value:"Standard functions",id:"standard-functions",children:[],level:3},{value:"Additional functions",id:"additional-functions",children:[],level:3},{value:"Methods",id:"methods",children:[{value:"<code>step0()</code>",id:"step0",children:[],level:3},{value:"<code>step1()</code>",id:"step1",children:[],level:3},{value:"<code>linear()</code>",id:"linear",children:[],level:3},{value:"<code>ease()</code>",id:"ease",children:[],level:3},{value:"<code>quad()</code>",id:"quad",children:[],level:3},{value:"<code>cubic()</code>",id:"cubic",children:[],level:3},{value:"<code>poly()</code>",id:"poly",children:[],level:3},{value:"<code>sin()</code>",id:"sin",children:[],level:3},{value:"<code>circle()</code>",id:"circle",children:[],level:3},{value:"<code>exp()</code>",id:"exp",children:[],level:3},{value:"<code>elastic()</code>",id:"elastic",children:[],level:3},{value:"<code>back()</code>",id:"back",children:[],level:3},{value:"<code>bounce()</code>",id:"bounce",children:[],level:3},{value:"<code>bezier()</code>",id:"bezier",children:[],level:3},{value:"<code>in()</code>",id:"in",children:[],level:3},{value:"<code>out()</code>",id:"out",children:[],level:3},{value:"<code>inOut()</code>",id:"inout",children:[],level:3}],level:2}],f={toc:h};function g(e){var n,t=e,{components:i}=t,p=((e,n)=>{var t={};for(var a in e)s.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&o)for(var a of o(e))n.indexOf(a)<0&&c.call(e,a)&&(t[a]=e[a]);return t})(t,["components"]);return(0,a.kt)("wrapper",(n=u(u({},f),p),l(n,r({components:i,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Easing")," module implements common easing functions. This module is used by ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/0.60/animated#timing"}),"Animated.timing()")," to convey physically believable motion in animations."),(0,a.kt)("p",null,"You can find a visualization of some common easing functions at ",(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/"}),"http://easings.net/")),(0,a.kt)("h3",u({},{id:"predefined-animations"}),"Predefined animations"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Easing")," module provides several predefined animations through the following methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#back"}),(0,a.kt)("inlineCode",{parentName:"a"},"back"))," provides a basic animation where the object goes slightly back before moving forward"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#bounce"}),(0,a.kt)("inlineCode",{parentName:"a"},"bounce"))," provides a bouncing animation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#ease"}),(0,a.kt)("inlineCode",{parentName:"a"},"ease"))," provides a basic inertial animation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#elastic"}),(0,a.kt)("inlineCode",{parentName:"a"},"elastic"))," provides a basic spring interaction")),(0,a.kt)("h3",u({},{id:"standard-functions"}),"Standard functions"),(0,a.kt)("p",null,"Three standard easing functions are provided:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#linear"}),(0,a.kt)("inlineCode",{parentName:"a"},"linear"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#quad"}),(0,a.kt)("inlineCode",{parentName:"a"},"quad"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#cubic"}),(0,a.kt)("inlineCode",{parentName:"a"},"cubic")))),(0,a.kt)("p",null,"The ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/0.60/easing#poly"}),(0,a.kt)("inlineCode",{parentName:"a"},"poly"))," function can be used to implement quartic, quintic, and other higher power functions."),(0,a.kt)("h3",u({},{id:"additional-functions"}),"Additional functions"),(0,a.kt)("p",null,"Additional mathematical functions are provided by the following methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#bezier"}),(0,a.kt)("inlineCode",{parentName:"a"},"bezier"))," provides a cubic bezier curve"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#circle"}),(0,a.kt)("inlineCode",{parentName:"a"},"circle"))," provides a circular function"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#sin"}),(0,a.kt)("inlineCode",{parentName:"a"},"sin"))," provides a sinusoidal function"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#exp"}),(0,a.kt)("inlineCode",{parentName:"a"},"exp"))," provides an exponential function")),(0,a.kt)("p",null,"The following helpers are used to modify other easing functions."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#in"}),(0,a.kt)("inlineCode",{parentName:"a"},"in"))," runs an easing function forwards"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#inout"}),(0,a.kt)("inlineCode",{parentName:"a"},"inOut"))," makes any easing function symmetrical"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/docs/0.60/easing#out"}),(0,a.kt)("inlineCode",{parentName:"a"},"out"))," runs an easing function backwards")),(0,a.kt)("hr",null),(0,a.kt)("h1",u({},{id:"reference"}),"Reference"),(0,a.kt)("h2",u({},{id:"methods"}),"Methods"),(0,a.kt)("h3",u({},{id:"step0"}),(0,a.kt)("inlineCode",{parentName:"h3"},"step0()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static step0(n)\n")),(0,a.kt)("p",null,"A stepping function, returns 1 for any positive value of ",(0,a.kt)("inlineCode",{parentName:"p"},"n"),"."),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"step1"}),(0,a.kt)("inlineCode",{parentName:"h3"},"step1()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static step1(n)\n")),(0,a.kt)("p",null,"A stepping function, returns 1 if ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," is greater than or equal to 1."),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"linear"}),(0,a.kt)("inlineCode",{parentName:"h3"},"linear()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static linear(t)\n")),(0,a.kt)("p",null,"A linear function, ",(0,a.kt)("inlineCode",{parentName:"p"},"f(t) = t"),". Position correlates to elapsed time one to one."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://cubic-bezier.com/#0,0,1,1"}),"http://cubic-bezier.com/#0,0,1,1")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"ease"}),(0,a.kt)("inlineCode",{parentName:"h3"},"ease()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static ease(t)\n")),(0,a.kt)("p",null,"A basic inertial interaction, similar to an object slowly accelerating to speed."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://cubic-bezier.com/#.42,0,1,1"}),"http://cubic-bezier.com/#.42,0,1,1")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"quad"}),(0,a.kt)("inlineCode",{parentName:"h3"},"quad()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static quad(t)\n")),(0,a.kt)("p",null,"A quadratic function, ",(0,a.kt)("inlineCode",{parentName:"p"},"f(t) = t * t"),". Position equals the square of elapsed time."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInQuad"}),"http://easings.net/#easeInQuad")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"cubic"}),(0,a.kt)("inlineCode",{parentName:"h3"},"cubic()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static cubic(t)\n")),(0,a.kt)("p",null,"A cubic function, ",(0,a.kt)("inlineCode",{parentName:"p"},"f(t) = t * t * t"),". Position equals the cube of elapsed time."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInCubic"}),"http://easings.net/#easeInCubic")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"poly"}),(0,a.kt)("inlineCode",{parentName:"h3"},"poly()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static poly(n)\n")),(0,a.kt)("p",null,"A power function. Position is equal to the Nth power of elapsed time."),(0,a.kt)("p",null,"n = 4: ",(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInQuart"}),"http://easings.net/#easeInQuart")," n = 5: ",(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInQuint"}),"http://easings.net/#easeInQuint")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"sin"}),(0,a.kt)("inlineCode",{parentName:"h3"},"sin()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static sin(t)\n")),(0,a.kt)("p",null,"A sinusoidal function."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInSine"}),"http://easings.net/#easeInSine")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"circle"}),(0,a.kt)("inlineCode",{parentName:"h3"},"circle()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static circle(t)\n")),(0,a.kt)("p",null,"A circular function."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInCirc"}),"http://easings.net/#easeInCirc")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"exp"}),(0,a.kt)("inlineCode",{parentName:"h3"},"exp()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static exp(t)\n")),(0,a.kt)("p",null,"An exponential function."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInExpo"}),"http://easings.net/#easeInExpo")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"elastic"}),(0,a.kt)("inlineCode",{parentName:"h3"},"elastic()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static elastic(bounciness)\n")),(0,a.kt)("p",null,"A basic elastic interaction, similar to a spring oscillating back and forth."),(0,a.kt)("p",null,"Default bounciness is 1, which overshoots a little bit once. 0 bounciness doesn't overshoot at all, and bounciness of N > 1 will overshoot about N times."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInElastic"}),"http://easings.net/#easeInElastic")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"back"}),(0,a.kt)("inlineCode",{parentName:"h3"},"back()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static back(s)\n")),(0,a.kt)("p",null,"Use with ",(0,a.kt)("inlineCode",{parentName:"p"},"Animated.parallel()")," to create a basic effect where the object animates back slightly as the animation starts."),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"bounce"}),(0,a.kt)("inlineCode",{parentName:"h3"},"bounce()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static bounce(t)\n")),(0,a.kt)("p",null,"Provides a basic bouncing effect."),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"http://easings.net/#easeInBounce"}),"http://easings.net/#easeInBounce")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"bezier"}),(0,a.kt)("inlineCode",{parentName:"h3"},"bezier()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static bezier(x1, y1, x2, y2)\n")),(0,a.kt)("p",null,"Provides a cubic bezier curve, equivalent to CSS Transitions' ",(0,a.kt)("inlineCode",{parentName:"p"},"transition-timing-function"),"."),(0,a.kt)("p",null,"A useful tool to visualize cubic bezier curves can be found at ",(0,a.kt)("a",u({parentName:"p"},{href:"http://cubic-bezier.com/"}),"http://cubic-bezier.com/")),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"in"}),(0,a.kt)("inlineCode",{parentName:"h3"},"in()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static in easing;\n")),(0,a.kt)("p",null,"Runs an easing function forwards."),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"out"}),(0,a.kt)("inlineCode",{parentName:"h3"},"out()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static out(easing)\n")),(0,a.kt)("p",null,"Runs an easing function backwards."),(0,a.kt)("hr",null),(0,a.kt)("h3",u({},{id:"inout"}),(0,a.kt)("inlineCode",{parentName:"h3"},"inOut()")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-jsx"}),"static inOut(easing)\n")),(0,a.kt)("p",null,"Makes any easing function symmetrical. The easing function will run forwards for half of the duration, then backwards for the rest of the duration."))}g.isMDXComponent=!0}}]);