"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[76580],{35318:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var r=a(27378);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,c=n(e,["components","mdxType","originalType","parentName"]),d=p(a),h=i,m=d["".concat(o,".").concat(h)]||d[h]||u[h]||l;return a?r.createElement(m,s(s({ref:t},c),{},{components:a})):r.createElement(m,s({ref:t},c))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,s=new Array(l);s[0]=d;var n={};for(var o in t)hasOwnProperty.call(t,o)&&(n[o]=t[o]);n.originalType=e,n.mdxType="string"==typeof e?e:i,s[1]=n;for(var p=2;p<l;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},26397:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return h},metadata:function(){return m},toc:function(){return k},default:function(){return b}});var r=a(35318),i=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,u=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&c(e,a,t[a]);if(n)for(var a of n(t))p.call(t,a)&&c(e,a,t[a]);return e};const d={id:"release-roles-responsibilities",title:"Roles and Responsibilities"},h=void 0,m={unversionedId:"release-roles-responsibilities",id:"release-roles-responsibilities",title:"Roles and Responsibilities",description:"Here we set guidelines to apply the \u201cdividi et impera\u201d approach to React Native releases: it is an involved process and we need to clarify the work to allow for easier rotations of folks in various positions.",source:"@site/contributing/release-roles-responsibilites.md",sourceDirName:".",slug:"/release-roles-responsibilities",permalink:"/contributing/release-roles-responsibilities",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/contributing/release-roles-responsibilites.md",tags:[],version:"current",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"release-roles-responsibilities",title:"Roles and Responsibilities"},sidebar:"contributing",previous:{title:"Troubleshooting",permalink:"/contributing/release-troubleshooting"},next:{title:"Release Dependencies",permalink:"/contributing/release-dependencies"}},k=[{value:"Release Role #1: Meta Releasers (x2)",id:"release-role-1-meta-releasers-x2",children:[{value:"Details",id:"details",children:[],level:3},{value:"Release Captain Responsibilities",id:"release-captain-responsibilities",children:[],level:3},{value:"Reverse Shadow Responsibilities",id:"reverse-shadow-responsibilities",children:[],level:3},{value:"Who can fill it",id:"who-can-fill-it",children:[],level:3}],level:2},{value:"Release Role #2 : Release Copilot",id:"release-role-2--release-copilot",children:[{value:"Details",id:"details-1",children:[],level:3},{value:"Responsibilities",id:"responsibilities",children:[],level:3},{value:"Who can fill it",id:"who-can-fill-it-1",children:[],level:3}],level:2},{value:"Release Role #3: Release Supporter",id:"release-role-3-release-supporter",children:[{value:"Details",id:"details-2",children:[],level:3},{value:"Release Supporter Responsibilities",id:"release-supporter-responsibilities",children:[],level:3},{value:"Release Tester Responsibilities",id:"release-tester-responsibilities",children:[],level:3},{value:"Who can fill it",id:"who-can-fill-it-2",children:[{value:"Apply to the role",id:"apply-to-the-role",children:[],level:4}],level:3}],level:2}],f={toc:k};function b(e){var t,a=e,{components:i}=a,c=((e,t)=>{var a={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&n)for(var r of n(e))t.indexOf(r)<0&&p.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=u(u({},f),c),l(t,s({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Here we set guidelines to apply the \u201cdividi et impera\u201d approach to React Native releases: it is an involved process and we need to clarify the work to allow for easier rotations of folks in various positions."),(0,r.kt)("p",null,"The roles should be imagined as \u201cconcentric\u201d, with #1 in the centre: this means that anything in role #3 can be done by #2 or #1, and anything on role #2 can be done by #1."),(0,r.kt)("p",null,"The goal of this structure is that #1 doesn\u2019t have to do everything: to do so the suggestion is to at least always have a person per each role in each release."),(0,r.kt)("hr",null),(0,r.kt)("h2",u({},{id:"release-role-1-meta-releasers-x2"}),"Release Role #1: Meta Releasers (x2)"),(0,r.kt)("h3",u({},{id:"details"}),"Details"),(0,r.kt)("p",null,"Two sub-roles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1 ",(0,r.kt)("strong",{parentName:"li"},"release captain")," as main point of contact per minor release (aiming for every 2 months, see ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/facebook/react-native/wiki/Release-Schedule"}),"schedule"),")"),(0,r.kt)("li",{parentName:"ul"},"1 ",(0,r.kt)("strong",{parentName:"li"},"reverse shadow")," per minor release \u2014 working on high-need tooling (perhaps from retrospective of previous minor release) and serves as backup if release captain is out")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Time commitment:")," maximum 4 hours/week of work for each release captain and reverse shadow."),(0,r.kt)("h3",u({},{id:"release-captain-responsibilities"}),"Release Captain Responsibilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Drives the initial cut and sets up release scaffolding (re: blogpost draft, documentation bump, etc)"),(0,r.kt)("li",{parentName:"ul"},"Is informed of the pre-release & stable release status and any blocking issues and communicates to appropriate channels",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Attends & drives weekly release meeting"),(0,r.kt)("li",{parentName:"ul"},"updates and monitors the #releases channel"),(0,r.kt)("li",{parentName:"ul"},"updates and monitors discussion in ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions"}),"react-wg/react-native-releases")," discussion for both:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions/categories/releases"}),"pre-release")),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions/categories/patches"}),"stable release (for patches)")))))),(0,r.kt)("li",{parentName:"ul"},"Make final call on release decisions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Decide when to promote pre-release to stable (in consult with ",(0,r.kt)("strong",{parentName:"li"},"co-pilot")," and ",(0,r.kt)("strong",{parentName:"li"},"release supporters"),")"),(0,r.kt)("li",{parentName:"ul"},"Decide when to release a patch on stable"))),(0,r.kt)("li",{parentName:"ul"},"Ensures blocking issues have owners",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Escalate internally if release community is blocked by Meta-owned dependencies (metro, folly, flipper, hermes, etc)"),(0,r.kt)("li",{parentName:"ul"},"Coordinate with release co-pilot & supporters on any community library blockers (reanimated, cli, etc.)"))),(0,r.kt)("li",{parentName:"ul"},"Escalates security alerts",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"When a security alert gets raised, communicates it quickly to relevant partners and internally"),(0,r.kt)("li",{parentName:"ul"},"If the security fix commit lands and it\u2019s important, coordinates with the ",(0,r.kt)("strong",{parentName:"li"},"copilot")," on which stable branches should get the releases and produces the patch releases accordingly"))),(0,r.kt)("li",{parentName:"ul"},"Can perform release or delegate release steps (as well as ",(0,r.kt)("strong",{parentName:"li"},"release co-pilot/reverse shadow"),")")),(0,r.kt)("h3",u({},{id:"reverse-shadow-responsibilities"}),"Reverse Shadow Responsibilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is informed of the minor release status and current stable status"),(0,r.kt)("li",{parentName:"ul"},"Supports release captain",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fills in for release captain if current release captain is unavailable"))),(0,r.kt)("li",{parentName:"ul"},"Actions on high-priority tooling, retrospective action items when relevant")),(0,r.kt)("h3",u({},{id:"who-can-fill-it"}),"Who can fill it"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"These roles must be filled by Meta engineers")),(0,r.kt)("hr",null),(0,r.kt)("h2",u({},{id:"release-role-2--release-copilot"}),"Release Role #2 : Release Copilot"),(0,r.kt)("h3",u({},{id:"details-1"}),"Details"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1 or 2 people (the second one being backup)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Time commitment:")," can be more flexible and doesn\u2019t have to align with minor release schedule, but we should update the release schedule when needed. Most likely, a couple hours per week."),(0,r.kt)("h3",u({},{id:"responsibilities"}),"Responsibilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is informed of the minor release status and current stable status",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"attends weekly release meeting"),(0,r.kt)("li",{parentName:"ul"},"updates and monitors #releases channel"),(0,r.kt)("li",{parentName:"ul"},"updates and monitors discussion in ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions"}),"react-wg/react-native-releases")," discussion for both:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions/categories/releases"}),"pre-release")),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions/categories/patches"}),"stable release (for patches)")))))),(0,r.kt)("li",{parentName:"ul"},"Ensures blocking issues have owners",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Escalate to Meta releaser when blocked by Meta-owned dependencies (metro, folly, flipper, hermes, etc)"),(0,r.kt)("li",{parentName:"ul"},"Find owners, coordinate with Meta releaser for any community library blockers (reanimated, cli, etc.)"))),(0,r.kt)("li",{parentName:"ul"},"Support release decisions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Help decide when to promote pre-release to stable"),(0,r.kt)("li",{parentName:"ul"},"Help decide when to release a patch on stable"),(0,r.kt)("li",{parentName:"ul"},"Help decide which commits are part of which release"))),(0,r.kt)("li",{parentName:"ul"},"Can perform release (pre-release/stable)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Merge cherry-picks (as agreed with main releaser)"),(0,r.kt)("li",{parentName:"ul"},"Create the changelog & release entry in GH"),(0,r.kt)("li",{parentName:"ul"},"Makes documentation PR and blogpost PR"),(0,r.kt)("li",{parentName:"ul"},"Trigger the rn-diff-purge script to update upgrade-helper (this should be automated for 0.68 onwards)"))),(0,r.kt)("li",{parentName:"ul"},"Help release testing via ",(0,r.kt)("a",u({parentName:"li"},{href:"/contributing/release-testing"}),"local E2E script"))),(0,r.kt)("h3",u({},{id:"who-can-fill-it-1"}),"Who can fill it"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This role can be filled by anyone with write access to the necessary repos (react-native)")),(0,r.kt)("hr",null),(0,r.kt)("h2",u({},{id:"release-role-3-release-supporter"}),"Release Role #3: Release Supporter"),(0,r.kt)("h3",u({},{id:"details-2"}),"Details"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"0 to N ",(0,r.kt)("strong",{parentName:"li"},"release supporters")),(0,r.kt)("li",{parentName:"ul"},"0 to N ",(0,r.kt)("strong",{parentName:"li"},"release testers"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Time commitment:")," as much or as little as available by each person."),(0,r.kt)("p",null,"No strict coupling with any specific release - active supports and testers will be thanked in the release notes of versions they help with."),(0,r.kt)("h3",u({},{id:"release-supporter-responsibilities"}),"Release Supporter Responsibilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Surface release issues either on stable or release candidate by triaging ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/facebook/react-native/labels?q=release"}),"release issues in the react-native repo"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Some issues might not be tagged appropriately, so keep an eye out on incoming issues and surface any"))),(0,r.kt)("li",{parentName:"ul"},"Watch the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions"}),"release discussions repo"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Help answer/debug/escalate issues"))),(0,r.kt)("li",{parentName:"ul"},"Work on any ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/facebook/react-native/projects/18"}),"release improvements")," or if you see something that can be improved; please add!"),(0,r.kt)("li",{parentName:"ul"},"Help ",(0,r.kt)("a",u({parentName:"li"},{href:"/contributing/release-testing"}),"test release candidates")," with your configuration or improve it"),(0,r.kt)("li",{parentName:"ul"},"Engage/help out with discussion in the release related channels (#supporters-feed, #testers-feedback, #release-coordination)")),(0,r.kt)("h3",u({},{id:"release-tester-responsibilities"}),"Release Tester Responsibilities"),(0,r.kt)("p",null,"This role is about helping test release candidates against your production app/workflows"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Helps surface release issues either on stable or release candidate by them testing out against their production apps and workflows",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Perhaps integrate either the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://www.npmjs.com/package/react-native"}),"npm ",(0,r.kt)("inlineCode",{parentName:"a"},"next")," or ",(0,r.kt)("inlineCode",{parentName:"a"},"nightly")," versions of react-native")," in your app's CI and raise any issues that might come up."))),(0,r.kt)("li",{parentName:"ul"},"Support regression fixes if relevant"),(0,r.kt)("li",{parentName:"ul"},"Engage/help out with discussion in the release related channels (#supporters-feed, #testers-feedback, #release-coordination)")),(0,r.kt)("h3",u({},{id:"who-can-fill-it-2"}),"Who can fill it"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anyone interested in supporting the React Native Open Source project and its releases!",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"To start, you can participate in the ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions"}),"discussion repo")," -- testing release candidates, surfacing any release issues you've seen or encountered yourself"),(0,r.kt)("li",{parentName:"ul"},"We also have some ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/reactwg/react-native-releases/discussions/categories/improvements"}),"discussions about improvements")," here as well as some issues related to ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/facebook/react-native/projects/18"}),"improving the release process in this project board"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If you are up for any specific tasks, let us know by commenting on it."))))),(0,r.kt)("li",{parentName:"ul"},"For release testers, it's preferred (as it's very valuable) that you are able to test the releases against a production app in order to also verify non-trivial parts of the flow like archiving a release for the App Store.")),(0,r.kt)("h4",u({},{id:"apply-to-the-role"}),"Apply to the role"),(0,r.kt)("p",null,"For both supporters and testers, you can let us know that you want to help out in this ",(0,r.kt)("a",u({parentName:"p"},{href:"https://github.com/reactwg/react-native-releases/discussions/11"}),"dedicated discussion"),". We will provide you access to a dedicated RN Discord server that folks involved the releasers use to coordinate."))}b.isMDXComponent=!0}}]);