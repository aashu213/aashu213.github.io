"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[99144],{35318:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(n),f=o,b=u["".concat(l,".").concat(f)]||u[f]||s[f]||a;return n?r.createElement(b,i(i({ref:t},d),{},{components:n})):r.createElement(b,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},47163:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return f},metadata:function(){return b},toc:function(){return g},default:function(){return y}});var r=n(35318),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&d(e,n,t[n]);if(c)for(var n of c(t))p.call(t,n)&&d(e,n,t[n]);return e};const u={id:"clipboard",title:"Clipboard"},f=void 0,b={unversionedId:"clipboard",id:"version-0.60/clipboard",title:"Clipboard",description:"Clipboard gives you an interface for setting and getting content from Clipboard on both Android and iOS",source:"@site/versioned_docs/version-0.60/clipboard.md",sourceDirName:".",slug:"/clipboard",permalink:"/docs/0.60/clipboard",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/clipboard.md",tags:[],version:"0.60",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"clipboard",title:"Clipboard"},sidebar:"version-0.60/api",previous:{title:"BackHandler",permalink:"/docs/0.60/backhandler"},next:{title:"DatePickerAndroid",permalink:"/docs/0.60/datepickerandroid"}},g=[{value:"Methods",id:"methods",children:[{value:"<code>getString()</code>",id:"getstring",children:[],level:3},{value:"<code>setString()</code>",id:"setstring",children:[],level:3}],level:2}],m={toc:g};function y(e){var t,n=e,{components:o}=n,d=((e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=s(s({},m),d),a(t,i({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Clipboard")," gives you an interface for setting and getting content from Clipboard on both Android and iOS"),(0,r.kt)("hr",null),(0,r.kt)("h1",s({},{id:"reference"}),"Reference"),(0,r.kt)("h2",s({},{id:"methods"}),"Methods"),(0,r.kt)("h3",s({},{id:"getstring"}),(0,r.kt)("inlineCode",{parentName:"h3"},"getString()")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static getString()\n")),(0,r.kt)("p",null,"Get content of string type, this method returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),", so you can use following code to get clipboard content"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"async _getContent() {\n  var content = await Clipboard.getString();\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",s({},{id:"setstring"}),(0,r.kt)("inlineCode",{parentName:"h3"},"setString()")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setString(content)\n")),(0,r.kt)("p",null,"Set content of string type. You can use following code to set clipboard content"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"_setContent() {\n  Clipboard.setString('hello world');\n}\n")),(0,r.kt)("p",null,"@param the content to be stored in the clipboard."))}y.isMDXComponent=!0}}]);