"use strict";(self.webpackChunkkatonic_dev=self.webpackChunkkatonic_dev||[]).push([[4773],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?i.createElement(g,r(r({ref:t},c),{},{components:n})):i.createElement(g,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63510:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return m},metadata:function(){return g},toc:function(){return f},default:function(){return k}});var i=n(35318),a=Object.defineProperty,o=Object.defineProperties,r=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))s.call(t,n)&&c(e,n,t[n]);return e};const d={id:"Katonic-Studio",title:"Katonic Studio"},m="Katonic Studio",g={unversionedId:"Katonic-Studio",id:"version-3.1/Katonic-Studio",title:"Katonic Studio",description:"Building an AI pipeline for a model is hard, breaking down and modularizing a pipeline is harder. A typical machine/deep learning pipeline begins as a series of preprocessing steps followed by experimentation/optimization and finally deployment. Each of these steps represents a challenge in the model development lifecycle.",source:"@site/versioned_docs/version-3.1/Katonic-Studio.md",sourceDirName:".",slug:"/Katonic-Studio",permalink:"/Katonic-Studio",tags:[],version:"3.1",frontMatter:{id:"Katonic-Studio",title:"Katonic Studio"},sidebar:"User Guide",previous:{title:"Katonic Automated Pipeline Deplyment",permalink:"/Katonic-Automated-Pipeline-Deplyment"},next:{title:"Model Deployment",permalink:"/Model-Deployment"}},f=[{value:"Runtime Image Configuration",id:"runtime-image-configuration",children:[],level:2},{value:"Adding a runtime image configuration",id:"adding-a-runtime-image-configuration",children:[],level:2},{value:"To edit a runtime image configuration:",id:"to-edit-a-runtime-image-configuration",children:[],level:2},{value:"Duplicating a runtime image configuration",id:"duplicating-a-runtime-image-configuration",children:[],level:2},{value:"Deleting a runtime image configuration",id:"deleting-a-runtime-image-configuration",children:[],level:2},{value:"Creating pipelines using the Katonic Studio",id:"creating-pipelines-using-the-katonic-studio",children:[],level:2},{value:"Exporting pipelines",id:"exporting-pipelines",children:[],level:2}],h={toc:f};function k(e){var t,a=e,{components:c}=a,d=((e,t)=>{var n={};for(var i in e)p.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&l)for(var i of l(e))t.indexOf(i)<0&&s.call(e,i)&&(n[i]=e[i]);return n})(a,["components"]);return(0,i.kt)("wrapper",(t=u(u({},h),d),o(t,r({components:c,mdxType:"MDXLayout"}))),(0,i.kt)("h1",u({},{id:"katonic-studio"}),"Katonic Studio"),(0,i.kt)("p",null,"Building an AI pipeline for a model is hard, breaking down and modularizing a pipeline is harder. A typical machine/deep learning pipeline begins as a series of preprocessing steps followed by experimentation/optimization and finally deployment. Each of these steps represents a challenge in the model development lifecycle.\nKatonic Studio provides a Pipeline Visual Editor for building AI pipelines from notebooks, Python scripts and R scripts, simplifying the conversion of multiple notebooks or scripts files into batch jobs or workflows."),(0,i.kt)("h2",u({},{id:"runtime-image-configuration"}),"Runtime Image Configuration"),(0,i.kt)("p",null,"A runtime image configuration identifies a container image that Katonic Studio can utilize to run pipeline nodes on container-based platforms.\nPrerequisites\nA runtime image configuration is associated with a container image that must meet these prerequisites:\n\u2022\tThe image is stored in a container registry in a public or private network that the container platform in which the pipeline is executed can connect to. Examples of such registries are hub.docker.com or a self-managed registry in an intranet environment."),(0,i.kt)("p",null,"\u2022\tThe image must have a current Python 3 version pre-installed and python3 in the search path."),(0,i.kt)("p",null,"\u2022\tThe image must have curl pre-installed and in the search path."),(0,i.kt)("p",null,"You can manage runtime image configurations using the JupyterLab UI\nManaging runtime image configurations using the JupyterLab UI\nRuntime image configurations can be added, modified, duplicated, and removed in the Runtime Images panel."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(27914).Z})),(0,i.kt)("p",null,"To access the panel in JupyterLab:"),(0,i.kt)("p",null,"\u2022\tClick the Open Runtime Images button in the pipeline editor toolbar."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(72406).Z})),(0,i.kt)("p",null,"OR"),(0,i.kt)("p",null,"\u2022\tSelect the Runtime Images panel from the JupyterLab sidebar."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(87363).Z})),(0,i.kt)("p",null,"OR"),(0,i.kt)("p",null,"\u2022\tOpen the JupyterLab command palette (Cmd/Ctrl + Shift + C) and search for Manage Runtime Images."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(22512).Z})),(0,i.kt)("h2",u({},{id:"adding-a-runtime-image-configuration"}),"Adding a runtime image configuration"),(0,i.kt)("p",null,"To add a runtime image configuration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the Runtime Images panel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click + to add a runtime image.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the runtime image properties as appropriate.\nModifying a runtime image configuration"))),(0,i.kt)("h2",u({},{id:"to-edit-a-runtime-image-configuration"}),"To edit a runtime image configuration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the Runtime Images panel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click the edit icon next to the runtime image name.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Modify the runtime image properties as desired."))),(0,i.kt)("h2",u({},{id:"duplicating-a-runtime-image-configuration"}),"Duplicating a runtime image configuration"),(0,i.kt)("p",null,"To duplicate a runtime image configuration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the Runtime Images panel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click the duplicate icon next to the runtime image configuration.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Follow the steps in \u2018Modifying a runtime image configuration\u2019 to customize the duplicated configuration."))),(0,i.kt)("h2",u({},{id:"deleting-a-runtime-image-configuration"}),"Deleting a runtime image configuration"),(0,i.kt)("p",null,"To delete a runtime image configuration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the Runtime Images panel.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click the delete icon next to the runtime image name.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Confirm deletion."))),(0,i.kt)("h1",u({},{id:"pipelines"}),"Pipelines"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Overview")),(0,i.kt)("p",null,"A pipeline comprises one or more nodes that are (in many cases) connected with each other to define execution dependencies. A node is an instance of a configurable component that commonly only implements a single unit of work to make it reusable. A unit of work can represent any task, such as loading data, pre-processing data, analyzing data, training a machine learning model, deploying a model for serving, querying a service, or sending an email."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(4669).Z})),(0,i.kt)("p",null,"Note though that multiple components might implement the \u201csame\u201d task. For example, one component might load data from a SQL database, whereas another component might download data from S3 storage. Conceptually both components load data, but how they load it is entirely different.\nPipelines are assembled using the Visual Pipeline Editor. The editor includes a palette, the canvas, and a properties panel, shown on the left, in the center, and the right, respectively."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(7403).Z})),(0,i.kt)("h2",u({},{id:"creating-pipelines-using-the-katonic-studio"}),"Creating pipelines using the Katonic Studio"),(0,i.kt)("p",null,"The tutorials provide comprehensive step-by-step instructions for creating and running pipelines. To create a pipeline using the editor:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open the JupyterLab Launcher and select katonic Studio ")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(2283).Z})),(0,i.kt)("ol",u({},{start:2}),(0,i.kt)("li",{parentName:"ol"},"Expand the properties panel and define the pipeline properties. Pipeline properties include a description and default values for node properties. (Support for pipeline properties varies by release.)")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(62986).Z})),(0,i.kt)("ol",u({},{start:3}),(0,i.kt)("li",{parentName:"ol"},"Drag and drop components from the palette onto the canvas or double click on a palette entry.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(15819).Z})),(0,i.kt)("p",null,"You can also drag and drop Jupyter notebooks, Python scripts, or R scripts from the JupyterLab File Browser onto the canvas."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(65560).Z})),(0,i.kt)("ol",u({},{start:4}),(0,i.kt)("li",{parentName:"ol"},"Define the dependencies between nodes by connecting them, essentially creating an execution graph.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(4701).Z})),(0,i.kt)("ol",u({},{start:5}),(0,i.kt)("li",{parentName:"ol"},"Define the runtime properties for each node. Highlight a node, right click, and select Open Properties. Runtime properties configure a component and govern its execution behavior.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(22718).Z})),(0,i.kt)("p",null,"Runtime properties are component specific. For generic components (Jupyter notebook, Python script, and R script) the properties are defined as follows:\nRuntime Image"),(0,i.kt)("p",null,"\u2022\tRequired. The container image you want to use to run the notebook or script."),(0,i.kt)("p",null,"\u2022\tExample: TensorFlow 2.0\nCPU, GPU, and RAM"),(0,i.kt)("p",null,"\u2022\tOptional. Resources that the notebook or script requires.\nFile Dependencies"),(0,i.kt)("p",null,"\u2022\tOptional. A list of files to be passed from the local working environment into each respective step of the pipeline. Files should be in the same directory (or subdirectory thereof) as the file it is associated with. Specify one file, directory, or expression per line. Supported patterns are * and ?."),(0,i.kt)("p",null,"\u2022\tExample: dependent-script.py\nEnvironment Variables"),(0,i.kt)("p",null,"\u2022\tOptional. A list of environment variables to be set inside in the container. Specify one variable/value pair per line, separated by =."),(0,i.kt)("p",null,"\u2022\tExample: TOKEN=value\nOutput Files\n\u2022\tOptional. A list of files generated by the notebook inside the image to be passed as inputs to the next step of the pipeline. Specify one file, directory, or expression per line. Supported patterns are * and ?."),(0,i.kt)("p",null,"\u2022\tExample: data/*.csv"),(0,i.kt)("ol",u({},{start:6}),(0,i.kt)("li",{parentName:"ol"},"Associate each node with a comment to document its purpose.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(20899).Z})),(0,i.kt)("ol",u({},{start:7}),(0,i.kt)("li",{parentName:"ol"},"Save the pipeline file.\nNote: You can rename the pipeline file in the JupyterLab File Browser.\nRunning pipelines\nRunning a pipeline from the Visual Pipeline Editor\nTo run a pipeline from the Visual Pipeline Editor:"),(0,i.kt)("li",{parentName:"ol"},"Click Run Pipeline in the editor\u2019s tool bar.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(93604).Z})),(0,i.kt)("ol",u({},{start:2}),(0,i.kt)("li",{parentName:"ol"},"For generic pipelines select a runtime platform (local, Kubeflow Pipelines,) and a runtime configuration for that platform. For runtime-specific pipelines select a runtime configuration.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(15926).Z})),(0,i.kt)("h2",u({},{id:"exporting-pipelines"}),"Exporting pipelines"),(0,i.kt)("p",null,"When you export a pipeline Katonic Studio only prepares it for later execution, but does not upload it to the Kubeflow Pipelines. Export performs two tasks. It packages dependencies for generic components and uploads them to cloud storage, and it generates pipeline code for the target runtime.\nExporting a pipeline from the Visual Pipeline Editor\nTo export a pipeline from the Visual Pipeline Editor:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Click Export Pipeline in the editor\u2019s tool bar.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(35581).Z})),(0,i.kt)("ol",u({},{start:2}),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"For generic pipelines select a runtime platform (local, Kubeflow Pipelines, or Apache Airflow) and a runtime configuration for that platform. For runtime-specific pipelines select a runtime configuration.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Select an export format."))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(70051).Z})),(0,i.kt)("ol",u({},{start:4}),(0,i.kt)("li",{parentName:"ol"},"Import the exported pipeline file using the Kubeflow Central Dashboard or add it to the Git repository that Apache Airflow is monitoring.")),(0,i.kt)("p",null,"Ability to run a notebook, Python or R script as a batch job\nKatonic Studio extends the Jupyter Notebook UI to allow for execution of a notebook as a batch job in local or remote cloud environments.\nTo run a notebook as a batch job open the notebook and select Run as Pipeline button from the menu bar."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(39793).Z})),(0,i.kt)("p",null,"Similarly, to submit a Python or R script as a batch job, open a the script file and select Run as Pipeline button from the editor toolbar.\nReusable Code Snippets\nThe Code Snippet editor introduces support for reusable code fragments, making programming in JupyterLab more efficient by reducing repetitive work."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(56989).Z})),(0,i.kt)("p",null,"For information on how to manage and use code snippets refer to the Code Snippets topic in the User Guide.\nThe code snippet feature can optionally be installed as a stand-alone extension.\nPython and R scripts execution support\nKatonic Studio contributes a Script editor with support for Python and R files, which can take advantage of the Hybrid Runtime Support enabling users to locally edit scripts and execute them against local or cloud-based resources seamlessly."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(82443).Z})),(0,i.kt)("p",null,"For information on how to use the Script editor refer to the Enhanced Script Support topic in the User Guide.\nThe Script editor feature can optionally be installed as a stand-alone extension.\nNotebook navigation using auto-generated Table of Contents\nThe enhanced notebook navigation recognizes markdown headings and auto-generates a Table of Contents providing enhanced navigation capabilities.\nTo access the Table of Contents, open a notebook and select the Table of Contents tab from the sidebar."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Untitled",src:n(84488).Z})))}k.isMDXComponent=!0},27914:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio1-74aeaa63d2bcef041211294d850cf5fa.png"},65560:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio10-3c6bae8cb6a665ed2b68550a95a1ac3e.png"},4701:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio11-719544baefeba6f256e8833acf09c219.png"},22718:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio12-ca248d9fbab3ba4f9bd70016fbc3cd21.png"},20899:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio13-e7a1aec81e129eb3e91cd6670dee0f54.png"},93604:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio14-7aa7ce2615a06bba88123651de220725.png"},15926:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio15-3161d4441bc12000cebbf62d6186e44c.png"},35581:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio16-53b629247e806303295e914aafb98bd2.png"},70051:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio17-2552c12668c5b2ae189bdb17d20270df.png"},39793:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio18-938a100f2dcd68fb9885547cee6e2ef9.png"},56989:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio19-29f5b9469dafbf18e9889d7949f8e39b.png"},72406:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio2-bd540287b954ef04413d92b04c017ccd.png"},82443:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio20-87065176147f094654781e69b63dab1a.png"},84488:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio21-a3c3c9c9b1fe90814b0efa0c084bb058.png"},87363:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio3-5d109cb18aeb682f3896dfb30c8da222.png"},22512:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio4-561990498546ac942657dc1b3a68a414.png"},4669:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio5-e7a1aec81e129eb3e91cd6670dee0f54.png"},7403:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio6-5bb24ae9589bc6d3055605fa4076ff63.png"},2283:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio7-4837a8a51f27978ec16de662874bbd7f.png"},62986:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio8-d10fa3063070c748dedb1297405b925b.png"},15819:function(e,t,n){t.Z=n.p+"assets/images/KatonicStudio9-57994498103a6a90afd20d7989c4b65f.png"}}]);