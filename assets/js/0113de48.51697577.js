"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[47069],{35318:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return m}});var n=a(27378);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),k=d(a),m=r,c=k["".concat(p,".").concat(m)]||k[m]||s[m]||l;return a?n.createElement(c,i(i({ref:e},u),{},{components:a})):n.createElement(c,i({ref:e},u))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},17552:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return k},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return h},default:function(){return b}});var n=a(35318),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(t,e,a)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,s=(t,e)=>{for(var a in e||(e={}))p.call(e,a)&&u(t,a,e[a]);if(o)for(var a of o(e))d.call(e,a)&&u(t,a,e[a]);return t};const k={id:"statusbar",title:"StatusBar"},m=void 0,c={unversionedId:"statusbar",id:"version-0.61/statusbar",title:"StatusBar",description:"Component to control the app status bar.",source:"@site/versioned_docs/version-0.61/statusbar.md",sourceDirName:".",slug:"/statusbar",permalink:"/docs/0.61/statusbar",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/statusbar.md",tags:[],version:"0.61",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"statusbar",title:"StatusBar"},sidebar:"version-0.61/components",previous:{title:"\ud83d\udea7 Slider",permalink:"/docs/0.61/slider"},next:{title:"Switch",permalink:"/docs/0.61/switch"}},h=[{value:"Usage with Navigator",id:"usage-with-navigator",children:[],level:3},{value:"Imperative API",id:"imperative-api",children:[],level:3},{value:"Constants",id:"constants",children:[],level:2},{value:"Props",id:"props",children:[{value:"<code>animated</code>",id:"animated",children:[],level:3},{value:"<code>backgroundColor</code>",id:"backgroundcolor",children:[],level:3},{value:"<code>barStyle</code>",id:"barstyle",children:[],level:3},{value:"<code>hidden</code>",id:"hidden",children:[],level:3},{value:"<code>networkActivityIndicatorVisible</code>",id:"networkactivityindicatorvisible",children:[],level:3},{value:"<code>showHideTransition</code>",id:"showhidetransition",children:[],level:3},{value:"<code>translucent</code>",id:"translucent",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"<code>popStackEntry()</code>",id:"popstackentry",children:[],level:3},{value:"<code>pushStackEntry()</code>",id:"pushstackentry",children:[],level:3},{value:"<code>replaceStackEntry()</code>",id:"replacestackentry",children:[],level:3},{value:"<code>setBackgroundColor()</code>",id:"setbackgroundcolor",children:[],level:3},{value:"<code>setBarStyle()</code>",id:"setbarstyle",children:[],level:3},{value:"<code>setHidden()</code>",id:"sethidden",children:[],level:3},{value:"<code>setNetworkActivityIndicatorVisible()</code>",id:"setnetworkactivityindicatorvisible",children:[],level:3},{value:"<code>setTranslucent()</code>",id:"settranslucent",children:[],level:3}],level:2},{value:"Type Definitions",id:"type-definitions",children:[{value:"StatusBarAnimation",id:"statusbaranimation",children:[],level:3},{value:"StatusBarStyle",id:"statusbarstyle",children:[],level:3}],level:2}],N={toc:h};function b(t){var e,a=t,{components:r}=a,u=((t,e)=>{var a={};for(var n in t)p.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&d.call(t,n)&&(a[n]=t[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(e=s(s({},N),u),l(e,i({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Component to control the app status bar."),(0,n.kt)("h3",s({},{id:"usage-with-navigator"}),"Usage with Navigator"),(0,n.kt)("p",null,"It is possible to have multiple ",(0,n.kt)("inlineCode",{parentName:"p"},"StatusBar")," components mounted at the same time. The props will be merged in the order the ",(0,n.kt)("inlineCode",{parentName:"p"},"StatusBar")," components were mounted."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),'<View>\n  <StatusBar backgroundColor="blue" barStyle="light-content" />\n  <View>\n    <StatusBar hidden={route.statusBarHidden} />\n    ...\n  </View>\n</View>\n')),(0,n.kt)("h3",s({},{id:"imperative-api"}),"Imperative API"),(0,n.kt)("p",null,"For cases where using a component is not ideal, there is also an imperative API exposed as static functions on the component. It is however not recommended to use the static API and the component for the same prop because any value set by the static API will get overridden by the one set by the component in the next render."),(0,n.kt)("hr",null),(0,n.kt)("h1",s({},{id:"reference"}),"Reference"),(0,n.kt)("h2",s({},{id:"constants"}),"Constants"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"currentHeight")," (Android only) The height of the status bar."),(0,n.kt)("h2",s({},{id:"props"}),"Props"),(0,n.kt)("h3",s({},{id:"animated"}),(0,n.kt)("inlineCode",{parentName:"h3"},"animated")),(0,n.kt)("p",null,"If the transition between status bar property changes should be animated. Supported for backgroundColor, barStyle and hidden."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"bool"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"backgroundcolor"}),(0,n.kt)("inlineCode",{parentName:"h3"},"backgroundColor")),(0,n.kt)("p",null,"The background color of the status bar."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Platform"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/docs/0.61/colors"}),"color")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Android")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"barstyle"}),(0,n.kt)("inlineCode",{parentName:"h3"},"barStyle")),(0,n.kt)("p",null,"Sets the color of the status bar text."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"enum('default', 'light-content', 'dark-content')"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"hidden"}),(0,n.kt)("inlineCode",{parentName:"h3"},"hidden")),(0,n.kt)("p",null,"If the status bar is hidden."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"bool"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"networkactivityindicatorvisible"}),(0,n.kt)("inlineCode",{parentName:"h3"},"networkActivityIndicatorVisible")),(0,n.kt)("p",null,"If the network activity indicator should be visible."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Platform"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"bool"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"iOS")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"showhidetransition"}),(0,n.kt)("inlineCode",{parentName:"h3"},"showHideTransition")),(0,n.kt)("p",null,"The transition effect when showing and hiding the status bar using the ",(0,n.kt)("inlineCode",{parentName:"p"},"hidden")," prop. Defaults to 'fade'."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Platform"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"enum('fade', 'slide')"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"iOS")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"translucent"}),(0,n.kt)("inlineCode",{parentName:"h3"},"translucent")),(0,n.kt)("p",null,"If the status bar is translucent. When translucent is set to true, the app will draw under the status bar. This is useful when using a semi transparent status bar color."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Platform"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"bool"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Android")))),(0,n.kt)("h2",s({},{id:"methods"}),"Methods"),(0,n.kt)("h3",s({},{id:"popstackentry"}),(0,n.kt)("inlineCode",{parentName:"h3"},"popStackEntry()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static popStackEntry(entry: any)\n")),(0,n.kt)("p",null,"Get and remove the last a StatusBar entry from the stack."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"entry"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"any"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Entry returned from ",(0,n.kt)("inlineCode",{parentName:"td"},"pushStackEntry"),".")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"pushstackentry"}),(0,n.kt)("inlineCode",{parentName:"h3"},"pushStackEntry()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static pushStackEntry(props: any)\n")),(0,n.kt)("p",null,"Push a StatusBar entry onto the stack. The return value should be passed to ",(0,n.kt)("inlineCode",{parentName:"p"},"popStackEntry")," when complete."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"props"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"any"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Object containing the StatusBar props to use in the stack entry.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"replacestackentry"}),(0,n.kt)("inlineCode",{parentName:"h3"},"replaceStackEntry()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static replaceStackEntry(entry: any, props: any)\n")),(0,n.kt)("p",null,"Replace an existing StatusBar stack entry with new props."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"entry"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"any"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Entry returned from ",(0,n.kt)("inlineCode",{parentName:"td"},"pushStackEntry")," to replace.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"props"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"any"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Object containing the StatusBar props to use in the replacement stack entry.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"setbackgroundcolor"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setBackgroundColor()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setBackgroundColor(color: string, [animated]: boolean)\n")),(0,n.kt)("p",null,"Set the background color for the status bar. Android-only"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"color"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"string"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Background color.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"animated"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Animate the style change.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"setbarstyle"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setBarStyle()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setBarStyle(style: StatusBarStyle, [animated]: boolean)\n")),(0,n.kt)("p",null,"Set the status bar style"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"style"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/docs/0.61/statusbar#statusbarstyle"}),"StatusBarStyle")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Status bar style to set")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"animated"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Animate the style change.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"sethidden"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setHidden()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setHidden(hidden: boolean, [animation]: StatusBarAnimation)\n")),(0,n.kt)("p",null,"Show or hide the status bar"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"hidden"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Hide the status bar.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"animation"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),(0,n.kt)("a",s({parentName:"td"},{href:"/docs/0.61/statusbar#statusbaranimation"}),"StatusBarAnimation")),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Optional animation when changing the status bar hidden property.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"setnetworkactivityindicatorvisible"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setNetworkActivityIndicatorVisible()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setNetworkActivityIndicatorVisible(visible: boolean)\n")),(0,n.kt)("p",null,"Control the visibility of the network activity indicator. iOS-only."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"visible"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Show the indicator.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"settranslucent"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setTranslucent()")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-jsx"}),"static setTranslucent(translucent: boolean)\n")),(0,n.kt)("p",null,"Control the translucency of the status bar. Android-only."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"translucent"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Set as translucent.")))),(0,n.kt)("h2",s({},{id:"type-definitions"}),"Type Definitions"),(0,n.kt)("h3",s({},{id:"statusbaranimation"}),"StatusBarAnimation"),(0,n.kt)("p",null,"Status bar animation"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"\\$Enum")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Constants:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Value"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"none"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"No animation")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"fade"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Fade animation")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"slide"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Slide animation")))),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"statusbarstyle"}),"StatusBarStyle"),(0,n.kt)("p",null,"Status bar style"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"\\$Enum")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Constants:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Value"),(0,n.kt)("th",s({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"default"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Default status bar style (dark for iOS, light for Android)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"light-content"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Dark background, white texts and icons")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:null}),"dark-content"),(0,n.kt)("td",s({parentName:"tr"},{align:null}),"Light background, dark texts and icons (requires API>=23 on Android)")))))}b.isMDXComponent=!0}}]);