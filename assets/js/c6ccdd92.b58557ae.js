"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[16356],{35318:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return k}});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),k=r,c=d["".concat(s,".").concat(k)]||d[k]||m[k]||l;return a?n.createElement(c,i(i({ref:t},u),{},{components:a})):n.createElement(c,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},55914:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return k},metadata:function(){return c},toc:function(){return h},default:function(){return N}});var n=a(35318),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&u(e,a,t[a]);if(o)for(var a of o(t))p.call(t,a)&&u(e,a,t[a]);return e};const d={id:"animatedvaluexy",title:"AnimatedValueXY"},k=void 0,c={unversionedId:"animatedvaluexy",id:"version-0.62/animatedvaluexy",title:"AnimatedValueXY",description:"2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal Animated.Value, but multiplexed. Contains two regular Animated.Values under the hood.",source:"@site/versioned_docs/version-0.62/animatedvaluexy.md",sourceDirName:".",slug:"/animatedvaluexy",permalink:"/docs/0.62/animatedvaluexy",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/animatedvaluexy.md",tags:[],version:"0.62",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"animatedvaluexy",title:"AnimatedValueXY"}},h=[{value:"Example",id:"example",children:[{value:"Methods",id:"methods",children:[],level:3}],level:2},{value:"Methods",id:"methods-1",children:[{value:"<code>setValue()</code>",id:"setvalue",children:[],level:3},{value:"<code>setOffset()</code>",id:"setoffset",children:[],level:3},{value:"<code>flattenOffset()</code>",id:"flattenoffset",children:[],level:3},{value:"<code>extractOffset()</code>",id:"extractoffset",children:[],level:3},{value:"<code>addListener()</code>",id:"addlistener",children:[],level:3},{value:"<code>removeListener()</code>",id:"removelistener",children:[],level:3},{value:"<code>removeAllListeners()</code>",id:"removealllisteners",children:[],level:3},{value:"<code>stopAnimation()</code>",id:"stopanimation",children:[],level:3},{value:"<code>resetAnimation()</code>",id:"resetanimation",children:[],level:3},{value:"<code>getLayout()</code>",id:"getlayout",children:[],level:3},{value:"<code>getTranslateTransform()</code>",id:"gettranslatetransform",children:[],level:3}],level:2}],f={toc:h};function N(e){var t,a=e,{components:r}=a,u=((e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=m(m({},f),u),l(t,i({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"2D Value for driving 2D animations, such as pan gestures. Almost identical API to normal ",(0,n.kt)("a",m({parentName:"p"},{href:"animatedvalue"}),(0,n.kt)("inlineCode",{parentName:"a"},"Animated.Value")),", but multiplexed. Contains two regular ",(0,n.kt)("inlineCode",{parentName:"p"},"Animated.Value"),"s under the hood."),(0,n.kt)("p",null,"See also ",(0,n.kt)("a",m({parentName:"p"},{href:"animated"}),(0,n.kt)("inlineCode",{parentName:"a"},"Animated")),"."),(0,n.kt)("h2",m({},{id:"example"}),"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"class DraggableView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pan: new Animated.ValueXY() // inits to zero\n    };\n    this.state.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: Animated.event([\n        null,\n        {\n          dx: this.state.pan.x, // x,y are Animated.Value\n          dy: this.state.pan.y\n        }\n      ]),\n      onPanResponderRelease: () => {\n        Animated.spring(\n          this.state.pan, // Auto-multiplexed\n          { toValue: { x: 0, y: 0 } } // Back to zero\n        ).start();\n      }\n    });\n  }\n  render() {\n    return (\n      <Animated.View\n        {...this.state.panResponder.panHandlers}\n        style={this.state.pan.getLayout()}>\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n}\n")),(0,n.kt)("h3",m({},{id:"methods"}),"Methods"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#setvalue"}),(0,n.kt)("inlineCode",{parentName:"a"},"setValue"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#setoffset"}),(0,n.kt)("inlineCode",{parentName:"a"},"setOffset"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#flattenoffset"}),(0,n.kt)("inlineCode",{parentName:"a"},"flattenOffset"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#extractoffset"}),(0,n.kt)("inlineCode",{parentName:"a"},"extractOffset"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#addlistener"}),(0,n.kt)("inlineCode",{parentName:"a"},"addListener"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#removelistener"}),(0,n.kt)("inlineCode",{parentName:"a"},"removeListener"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#removealllisteners"}),(0,n.kt)("inlineCode",{parentName:"a"},"removeAllListeners"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#stopanimation"}),(0,n.kt)("inlineCode",{parentName:"a"},"stopAnimation"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#resetanimation"}),(0,n.kt)("inlineCode",{parentName:"a"},"resetAnimation"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#getlayout"}),(0,n.kt)("inlineCode",{parentName:"a"},"getLayout"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"animatedvaluexy#gettranslatetransform"}),(0,n.kt)("inlineCode",{parentName:"a"},"getTranslateTransform")))),(0,n.kt)("hr",null),(0,n.kt)("h1",m({},{id:"reference"}),"Reference"),(0,n.kt)("h2",m({},{id:"methods-1"}),"Methods"),(0,n.kt)("h3",m({},{id:"setvalue"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setValue()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"setValue(value);\n")),(0,n.kt)("p",null,"Directly set the value. This will stop any animations running on the value and update all the bound properties."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"value"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"number"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",m({parentName:"tr"},{align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"setoffset"}),(0,n.kt)("inlineCode",{parentName:"h3"},"setOffset()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"setOffset(offset);\n")),(0,n.kt)("p",null,"Sets an offset that is applied on top of whatever value is set, whether via ",(0,n.kt)("inlineCode",{parentName:"p"},"setValue"),", an animation, or ",(0,n.kt)("inlineCode",{parentName:"p"},"Animated.event"),". Useful for compensating things like the start of a pan gesture."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"offset"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"number"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",m({parentName:"tr"},{align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"flattenoffset"}),(0,n.kt)("inlineCode",{parentName:"h3"},"flattenOffset()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"flattenOffset();\n")),(0,n.kt)("p",null,"Merges the offset value into the base value and resets the offset to zero. The final output of the value is unchanged."),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"extractoffset"}),(0,n.kt)("inlineCode",{parentName:"h3"},"extractOffset()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"extractOffset();\n")),(0,n.kt)("p",null,"Sets the offset value to the base value, and resets the base value to zero. The final output of the value is unchanged."),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"addlistener"}),(0,n.kt)("inlineCode",{parentName:"h3"},"addListener()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"addListener(callback);\n")),(0,n.kt)("p",null,"Adds an asynchronous listener to the value so you can observe updates from animations. This is useful because there is no way to synchronously read the value because it might be driven natively."),(0,n.kt)("p",null,"Returns a string that serves as an identifier for the listener."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"callback"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"function"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"The callback function which will receive an object with a ",(0,n.kt)("inlineCode",{parentName:"td"},"value")," key set to the new value.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"removelistener"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeListener()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"removeListener(id);\n")),(0,n.kt)("p",null,"Unregister a listener. The ",(0,n.kt)("inlineCode",{parentName:"p"},"id")," param shall match the identifier previously returned by ",(0,n.kt)("inlineCode",{parentName:"p"},"addListener()"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"id"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"string"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Yes"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Id for the listener being removed.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"removealllisteners"}),(0,n.kt)("inlineCode",{parentName:"h3"},"removeAllListeners()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"removeAllListeners();\n")),(0,n.kt)("p",null,"Remove all registered listeners."),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"stopanimation"}),(0,n.kt)("inlineCode",{parentName:"h3"},"stopAnimation()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"stopAnimation([callback]);\n")),(0,n.kt)("p",null,"Stops any running animation or tracking. ",(0,n.kt)("inlineCode",{parentName:"p"},"callback")," is invoked with the final value after stopping the animation, which is useful for updating state to match the animation position with layout."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"callback"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"function"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"A function that will receive the final value.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"resetanimation"}),(0,n.kt)("inlineCode",{parentName:"h3"},"resetAnimation()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"resetAnimation([callback]);\n")),(0,n.kt)("p",null,"Stops any animation and resets the value to its original."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"callback"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"function"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"No"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"A function that will receive the original value.")))),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"getlayout"}),(0,n.kt)("inlineCode",{parentName:"h3"},"getLayout()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"getLayout();\n")),(0,n.kt)("p",null,"Converts ",(0,n.kt)("inlineCode",{parentName:"p"},"{x, y}")," into ",(0,n.kt)("inlineCode",{parentName:"p"},"{left, top}")," for use in style, e.g."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"style={this.state.anim.getLayout()}\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",m({},{id:"gettranslatetransform"}),(0,n.kt)("inlineCode",{parentName:"h3"},"getTranslateTransform()")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"getTranslateTransform();\n")),(0,n.kt)("p",null,"Converts ",(0,n.kt)("inlineCode",{parentName:"p"},"{x, y}")," into a useable translation transform, e.g."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"style={{\n  transform: this.state.anim.getTranslateTransform()\n}}\n")))}N.isMDXComponent=!0}}]);