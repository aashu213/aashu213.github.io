"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[63018],{35318:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var a=r(27378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),f=n,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return r?a.createElement(d,i(i({ref:t},s),{},{components:r})):a.createElement(d,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},45034:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return m},contentTitle:function(){return f},metadata:function(){return d},toc:function(){return v},default:function(){return b}});var a=r(35318),n=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&s(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&s(e,r,t[r]);return e};const m={id:"out-of-tree-platforms",title:"Out-of-Tree Platforms"},f=void 0,d={unversionedId:"out-of-tree-platforms",id:"version-0.65/out-of-tree-platforms",title:"Out-of-Tree Platforms",description:"React Native is not only for Android and iOS devices - our partners and the community maintain projects that bring React Native to other platforms, such as:",source:"@site/versioned_docs/version-0.65/out-of-tree-platforms.md",sourceDirName:".",slug:"/out-of-tree-platforms",permalink:"/docs/0.65/out-of-tree-platforms",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/out-of-tree-platforms.md",tags:[],version:"0.65",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"out-of-tree-platforms",title:"Out-of-Tree Platforms"},sidebar:"version-0.65/docs",previous:{title:"Building For TV Devices",permalink:"/docs/0.65/building-for-tv"},next:{title:"Running On Device",permalink:"/docs/0.65/running-on-device"}},v=[{value:"Creating your own React Native platform",id:"creating-your-own-react-native-platform",children:[{value:"Bundling",id:"bundling",children:[],level:3}],level:2}],h={toc:v};function b(e){var t,r=e,{components:n}=r,s=((e,t)=>{var r={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&p.call(e,a)&&(r[a]=e[a]);return r})(r,["components"]);return(0,a.kt)("wrapper",(t=u(u({},h),s),o(t,i({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"React Native is not only for Android and iOS devices - our partners and the community maintain projects that bring React Native to other platforms, such as:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"From Partners")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/microsoft/react-native-macos"}),"React Native macOS")," - React Native for macOS and Cocoa."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/microsoft/react-native-windows"}),"React Native Windows")," - React Native for Microsoft's Universal Windows Platform (UWP).")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"From Community")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/areslabs/alita"}),"alita")," - An experimental, comprehensive port of React Native to mini-program (\u5fae\u4fe1\u5c0f\u7a0b\u5e8f)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/react-native-tvos/react-native-tvos"}),"React Native tvOS")," - React Native for Apple TV and Android TV devices."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/necolas/react-native-web"}),"React Native Web")," - React Native on the web using React DOM."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/valence-native/valence-native"}),"Valence Native")," - A wrapper for React Native, using Qt to target Linux, macOS, and Windows. Forked from ",(0,a.kt)("a",u({parentName:"li"},{href:"https://github.com/kusti8/proton-native"}),"Proton Native")," which is no longer maintained.")),(0,a.kt)("h2",u({},{id:"creating-your-own-react-native-platform"}),"Creating your own React Native platform"),(0,a.kt)("p",null,"Right now the process of creating a React Native platform from scratch is not very well documented - one of the goals of the upcoming re-architecture (",(0,a.kt)("a",u({parentName:"p"},{href:"/blog/2018/06/14/state-of-react-native-2018"}),"Fabric"),") is to make maintaining a platform easier."),(0,a.kt)("h3",u({},{id:"bundling"}),"Bundling"),(0,a.kt)("p",null,"As of React Native 0.57 you can now register your React Native platform with React Native's JavaScript bundler, ",(0,a.kt)("a",u({parentName:"p"},{href:"https://facebook.github.io/metro/"}),"Metro"),". This means you can pass ",(0,a.kt)("inlineCode",{parentName:"p"},"--platform example")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"npx react-native bundle"),", and it will look for JavaScript files with the ",(0,a.kt)("inlineCode",{parentName:"p"},".example.js")," suffix."),(0,a.kt)("p",null,"To register your platform with RNPM, your module's name must match one of these patterns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"react-native-example")," - It will search all top-level modules that start with ",(0,a.kt)("inlineCode",{parentName:"li"},"react-native-")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@org/react-native-example")," - It will search for modules that start with ",(0,a.kt)("inlineCode",{parentName:"li"},"react-native-")," under any scope"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@react-native-example/module")," - It will search in all modules under scopes with names starting with ",(0,a.kt)("inlineCode",{parentName:"li"},"@react-native-"))),(0,a.kt)("p",null,"You must also have an entry in your ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n  "rnpm": {\n    "haste": {\n      "providesModuleNodeModules": ["react-native-example"],\n      "platforms": ["example"]\n    }\n  }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'"providesModuleNodeModules"')," is an array of modules that will get added to the Haste module search path, and ",(0,a.kt)("inlineCode",{parentName:"p"},'"platforms"')," is an array of platform suffixes that will be added as valid platforms."))}b.isMDXComponent=!0}}]);