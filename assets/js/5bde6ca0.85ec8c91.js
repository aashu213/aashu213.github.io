"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[40921],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,k=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},75937:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return m},metadata:function(){return k},toc:function(){return b},default:function(){return v}});var r=n(35318),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))d.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))s.call(t,n)&&c(e,n,t[n]);return e};const u={id:"keyboard",title:"Keyboard"},m=void 0,k={unversionedId:"keyboard",id:"version-0.61/keyboard",title:"Keyboard",description:"Keyboard module to control keyboard events.",source:"@site/versioned_docs/version-0.61/keyboard.md",sourceDirName:".",slug:"/keyboard",permalink:"/docs/0.61/keyboard",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/keyboard.md",tags:[],version:"0.61",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"keyboard",title:"Keyboard"},sidebar:"version-0.61/api",previous:{title:"InteractionManager",permalink:"/docs/0.61/interactionmanager"},next:{title:"Layout Props",permalink:"/docs/0.61/layout-props"}},b=[{value:"Usage",id:"usage",children:[],level:3},{value:"Methods",id:"methods",children:[{value:"<code>addListener()</code>",id:"addlistener",children:[],level:3},{value:"<code>removeListener()</code>",id:"removelistener",children:[],level:3},{value:"<code>removeAllListeners()</code>",id:"removealllisteners",children:[],level:3},{value:"<code>dismiss()</code>",id:"dismiss",children:[],level:3}],level:2}],f={toc:b};function v(e){var t,n=e,{components:a}=n,c=((e,t)=>{var n={};for(var r in e)d.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=p(p({},f),c),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Keyboard")," module to control keyboard events."),(0,r.kt)("h3",p({},{id:"usage"}),"Usage"),(0,r.kt)("p",null,"The Keyboard module allows you to listen for native events and react to them, as well as make changes to the keyboard, like dismissing it."),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-jsx"}),"import React, { Component } from 'react';\nimport { Keyboard, TextInput } from 'react-native';\n\nclass Example extends Component {\n  componentDidMount() {\n    this.keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      this._keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      this._keyboardDidHide\n    );\n  }\n\n  componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n  }\n\n  _keyboardDidShow() {\n    alert('Keyboard Shown');\n  }\n\n  _keyboardDidHide() {\n    alert('Keyboard Hidden');\n  }\n\n  render() {\n    return <TextInput onSubmitEditing={Keyboard.dismiss} />;\n  }\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h1",p({},{id:"reference"}),"Reference"),(0,r.kt)("h2",p({},{id:"methods"}),"Methods"),(0,r.kt)("h3",p({},{id:"addlistener"}),(0,r.kt)("inlineCode",{parentName:"h3"},"addListener()")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-jsx"}),"static addListener(eventName, callback)\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"addListener")," function connects a JavaScript function to an identified native keyboard notification event."),(0,r.kt)("p",null,"This function then returns the reference to the listener."),(0,r.kt)("p",null,"@param {string} eventName The ",(0,r.kt)("inlineCode",{parentName:"p"},"nativeEvent")," is the string that identifies the event you're listening for. This can be any of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardWillShow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardDidShow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardWillHide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardDidHide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardWillChangeFrame")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardDidChangeFrame"))),(0,r.kt)("p",null,"Note that if you set ",(0,r.kt)("inlineCode",{parentName:"p"},"android:windowSoftInputMode")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"adjustResize"),", only ",(0,r.kt)("inlineCode",{parentName:"p"},"keyboardDidShow")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"keyboardDidHide")," events will be available on Android. If you set ",(0,r.kt)("inlineCode",{parentName:"p"},"android:windowSoftInputMode")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"adjustNothing"),", no events will be available on Android. ",(0,r.kt)("inlineCode",{parentName:"p"},"keyboardWillShow")," as well as ",(0,r.kt)("inlineCode",{parentName:"p"},"keyboardWillHide")," are generally not available on Android since there is no native corresponding event."),(0,r.kt)("p",null,"@param {function} callback function to be called when the event fires."),(0,r.kt)("hr",null),(0,r.kt)("h3",p({},{id:"removelistener"}),(0,r.kt)("inlineCode",{parentName:"h3"},"removeListener()")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-jsx"}),"static removeListener(eventName, callback)\n")),(0,r.kt)("p",null,"Removes a specific listener."),(0,r.kt)("p",null,"@param {string} eventName The ",(0,r.kt)("inlineCode",{parentName:"p"},"nativeEvent")," is the string that identifies the event you're listening for. @param {function} callback function to be called when the event fires."),(0,r.kt)("hr",null),(0,r.kt)("h3",p({},{id:"removealllisteners"}),(0,r.kt)("inlineCode",{parentName:"h3"},"removeAllListeners()")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-jsx"}),"static removeAllListeners(eventName)\n")),(0,r.kt)("p",null,"Removes all listeners for a specific event type."),(0,r.kt)("p",null,"@param {string} eventType The native event string listeners are watching which will be removed."),(0,r.kt)("hr",null),(0,r.kt)("h3",p({},{id:"dismiss"}),(0,r.kt)("inlineCode",{parentName:"h3"},"dismiss()")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-jsx"}),"static dismiss()\n")),(0,r.kt)("p",null,"Dismisses the active keyboard and removes focus."))}v.isMDXComponent=!0}}]);