"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[71138],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,y=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96220:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return d},metadata:function(){return y},toc:function(){return h},default:function(){return f}});var r=n(35318),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))p.call(t,n)&&c(e,n,t[n]);return e};const m={id:"typescript",title:"Using TypeScript with React Native"},d=void 0,y={unversionedId:"typescript",id:"version-0.61/typescript",title:"Using TypeScript with React Native",description:"TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",source:"@site/versioned_docs/version-0.61/typescript.md",sourceDirName:".",slug:"/typescript",permalink:"/docs/0.61/typescript",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/typescript.md",tags:[],version:"0.61",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"typescript",title:"Using TypeScript with React Native"},sidebar:"version-0.61/docs",previous:{title:"JavaScript Environment",permalink:"/docs/0.61/javascript-environment"},next:{title:"Direct Manipulation",permalink:"/docs/0.61/direct-manipulation"}},h=[{value:"Getting Started with TypeScript",id:"getting-started-with-typescript",children:[],level:2},{value:"Adding TypeScript to an Existing Project",id:"adding-typescript-to-an-existing-project",children:[],level:2},{value:"How TypeScript and React Native works",id:"how-typescript-and-react-native-works",children:[],level:2},{value:"What does React Native + TypeScript look like",id:"what-does-react-native--typescript-look-like",children:[],level:2},{value:"Where to Find Useful Advice",id:"where-to-find-useful-advice",children:[],level:2},{value:"Using Custom Path Aliases with TypeScript",id:"using-custom-path-aliases-with-typescript",children:[],level:2}],g={toc:h};function f(e){var t,n=e,{components:a}=n,c=((e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=u(u({},g),c),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,(0,r.kt)("a",u({parentName:"p"},{href:"https://www.typescriptlang.org/"}),"TypeScript")," is a language which extends JavaScript by adding type definitions, much like ",(0,r.kt)("a",u({parentName:"p"},{href:"https://flow.org"}),"Flow"),". While React Native is built in Flow, it supports both TypeScript ",(0,r.kt)("em",{parentName:"p"},"and")," Flow by default."),(0,r.kt)("h2",u({},{id:"getting-started-with-typescript"}),"Getting Started with TypeScript"),(0,r.kt)("p",null,"If you're starting a new project, there are a few different ways to get started. You can use the ",(0,r.kt)("a",u({parentName:"p"},{href:"https://github.com/react-native-community/react-native-template-typescript"}),"TypeScript template"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-shell"}),"# Template version is specifically for React Native 0.61\nnpx react-native init MyTSProject --template react-native-template-typescript@6.3.16\n")),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",u({parentName:"p"},{href:"https://expo.io"}),"Expo")," which has two TypeScript templates:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-shell"}),"npm install -g expo-cli\nexpo init MyTSProject\n")),(0,r.kt)("p",null,"Or you could use ",(0,r.kt)("a",u({parentName:"p"},{href:"https://infinite.red/ignite"}),"Ignite"),", which also has a TypeScript template:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-shell"}),"npm install -g ignite-cli\nignite new MyTSProject\n")),(0,r.kt)("h2",u({},{id:"adding-typescript-to-an-existing-project"}),"Adding TypeScript to an Existing Project"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add TypeScript and the types for React Native and Jest to your project.")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-shell"}),"yarn add typescript @types/jest @types/react @types/react-native @types/react-test-renderer\n# or for npm\nnpm install --save-dev typescript @types/jest @types/react @types/react-native @types/react-test-renderer\n")),(0,r.kt)("ol",u({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Add a TypeScript config file. Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," in the root of your project:")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n  "compilerOptions": {\n    "allowJs": true,\n    "allowSyntheticDefaultImports": true,\n    "esModuleInterop": true,\n    "isolatedModules": true,\n    "jsx": "react",\n    "lib": ["es6"],\n    "moduleResolution": "node",\n    "noEmit": true,\n    "strict": true,\n    "target": "esnext"\n  },\n  "exclude": [\n    "node_modules",\n    "babel.config.js",\n    "metro.config.js",\n    "jest.config.js"\n  ]\n}\n')),(0,r.kt)("ol",u({},{start:3}),(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"jest.config.js")," file to configure Jest to use TypeScript")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-js"}),"module.exports = {\n  preset: 'react-native',\n  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']\n};\n")),(0,r.kt)("ol",u({},{start:4}),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Rename a JavaScript file to be ",(0,r.kt)("inlineCode",{parentName:"p"},"*.tsx"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn tsc")," to type-check your new TypeScript files."))),(0,r.kt)("h2",u({},{id:"how-typescript-and-react-native-works"}),"How TypeScript and React Native works"),(0,r.kt)("p",null,"Out of the box, transforming your files to JavaScript works via the same ",(0,r.kt)("a",u({parentName:"p"},{href:"/docs/javascript-environment#javascript-syntax-transformers"}),"Babel infrastructure")," as a non-TypeScript React Native project. We recommend that you use the TypeScript compiler only for type checking. If you have existing TypeScript code being ported to React Native, there are ",(0,r.kt)("a",u({parentName:"p"},{href:"https://babeljs.io/docs/en/next/babel-plugin-transform-typescript"}),"one or two caveats")," to using Babel instead of TypeScript."),(0,r.kt)("h2",u({},{id:"what-does-react-native--typescript-look-like"}),"What does React Native + TypeScript look like"),(0,r.kt)("p",null,"You can provide an interface for a React Component's ","[Props]","](props) and ","[State]","](state) via ",(0,r.kt)("inlineCode",{parentName:"p"},"React.Component<Props, State>")," which will provide type-checking and editor auto-completing when working with that component in JSX."),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-tsx"}),"// components/Hello.tsx\nimport React from 'react';\nimport {Button, StyleSheet, Text, View} from 'react-native';\n\nexport interface Props {\n    name: string;\n    enthusiasmLevel?: number;\n}\n\nconst Hello: React.FC<Props> = (props) => {\n    const [enthusiasmLevel, setEnthusiasmLevel] = React.useState(props.enthusiasmLevel);\n\n    const onIncrement = () => setEnthusiasmLevel((enthusiasmLevel || 0) + 1);\n    const onDecrement = () => setEnthusiasmLevel((enthusiasmLevel || 0) - 1);\n\n    const getExclamationMarks = (numChars: number) => Array(numChars + 1).join('!');\n    return (\n        <View style={styles.root}>\n        <Text style={styles.greeting}>\n            Hello{' '}\n            {props.name + getExclamationMarks(enthusiasmLevel || 0)}\n        </Text>\n\n        <View style={styles.buttons}>\n            <View style={styles.button}>\n            <Button\n                title=\"-\"\n                onPress={onDecrement}\n                accessibilityLabel=\"decrement\"\n                color=\"red\"\n            />\n            </View>\n\n            <View style={styles.button}>\n            <Button\n                title=\"+\"\n                onPress={onIncrement}\n                accessibilityLabel=\"increment\"\n                color=\"blue\"\n            />\n            </View>\n        </View>\n        </View>\n    );\n    }\n}\n\n// styles\nconst styles = StyleSheet.create({\n    root: {\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    buttons: {\n       flexDirection: 'row',\n        minHeight: 70,\n        alignItems: 'stretch',\n        alignSelf: 'center',\n        borderWidth: 5,\n    },\n    button: {\n        flex: 1,\n        paddingVertical: 0,\n    },\n    greeting: {\n        color: '#999',\n        fontWeight: 'bold',\n    },\n});\n")),(0,r.kt)("p",null,"You can explore the syntax more in the ",(0,r.kt)("a",u({parentName:"p"},{href:"https://www.typescriptlang.org/play/?strictNullChecks=false&esModuleInterop=true&jsx=3#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKFEljgG8AhAVxhggDsAaOAZRgCeAGyS8AFkiQweAFSQAPaXABqwJAHcAvnGy4CRdDAC0HFDGAA3JGSpUFteMA4wkUTOiRwACjjABnBio4YLhTECQALjg-GCgnAHMKShC4JGcxZj9gFD8QABkkKyEAfiiOZhAAI1ckzVtKNE4YuAAJJCEhCCjkQwA6ADEAYQAeHwh-AD44AF44AAowXz8AShmp+iCQxo5mgG00mAysnPzC9p4-KQBRdMzs3IKigF0ZxGIYXszRGDMkBaXegcjvdTkVlklNsFts1OABJDhoIjhZyvOaraZTS4wG6HO4nR7tOZzIF4h5nIRwAA+lLgAAZVgBqOAARnBkLg0PgnAAIkhEUhkfBZmi1tFrrdjmSikSSZLQe0qTT6XAjCy2ZR2Zy4PFrvI0EIUCAzMBOABZFBQADWAWF5RAgzEFr8ZQq1Sg6KmAEEoFAUAI5naHU64EzWb0AFYQJxzfAAQnw6pSRBgzCgHHm7JSw1UGmighE03oMWESD8vRwEBgmgmmZCwzkijzJcLxZEZfiRCkCWrtZSwTaHQg9HwBDqyT7E-oi3GZbCniZOuxeoNRvMZot1uJEpBBIp1LpyzHE+CwwA9A2YDWNeOJ9m1OomwWi-nS71Kqx2Dsezfjyecw-WyQFsXzLd82E4b9fyzFhwI4XsoPMGACwAIiMZD4N-TgfFLPxCx5PkkQOI8oIndA0Bw4BKmAIRgEEPIUGqIRpmQgATAiBQOdCfxIqEIE6KBmKIFiuJ4uBTyvUSz3-K8MLrf9HyA58S1Aj8IIknjhhgz9ZInRCUIZETRJCLCiD8XD6DhBFCOcYijLgMiKKomi6IY9pmKcflBUMuzGn45jKiEZgkG8qDxJ0uApPvdTb1PaT4MijRorgRMQjHMcqFPU8FL8KgtUAm0+BfcRJA+flfjmDYfwrGAokq38UBo+IOFhFwQGdAhyOcVx8C4eCGuAJreHaTAonwTqXCgHr2U0XqfzAz92rqidMBEeRuWAIgMBNDhRpwdQpu4kIQCcNoBrEGq4AAdlpWb6sa5rWva-AYmTNAxAOu6Bo4IahBGjqDm627j0qaA2KgAB1YAWMOKIAFYgeCGb2XmzhavglaFCiZkEb7MAUBYliEmUVxzDQBqohu6acY7EqEjRw7eP40aAGIAE52Y+49ME4GBwaQM6LvwEGhBYznEdmzRwSAA"}),"TypeScript playground"),"."),(0,r.kt)("h2",u({},{id:"where-to-find-useful-advice"}),"Where to Find Useful Advice"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"http://www.typescriptlang.org/docs/home.html"}),"TypeScript Handbook")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://reactjs.org/docs/static-type-checking.html#typescript"}),"React's documentation on TypeScript")),(0,r.kt)("li",{parentName:"ul"},"[React + TypeScript Cheatsheets][cheat]"," has a good overview on how to use React with TypeScript")),(0,r.kt)("h2",u({},{id:"using-custom-path-aliases-with-typescript"}),"Using Custom Path Aliases with TypeScript"),(0,r.kt)("p",null,"To use custom path aliases with TypeScript, you need to set the path aliases to work from both Babel and TypeScript. Here's how:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Edit your ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," to have your ",(0,r.kt)("a",u({parentName:"li"},{href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping"}),"custom path mappings"),". Set anything in the root of ",(0,r.kt)("inlineCode",{parentName:"li"},"src")," to be available with no preceding path reference, and allow any test file to be accessed by using ",(0,r.kt)("inlineCode",{parentName:"li"},"test/File.tsx"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-diff"}),'    "target": "esnext",\n+     "baseUrl": ".",\n+     "paths": {\n+       "*": ["src/*"],\n+       "tests": ["tests/*"]\n+     },\n    }\n')),(0,r.kt)("ol",u({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Configure the Babel side done by adding a new dependency, ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/tleunen/babel-plugin-module-resolver"}),(0,r.kt)("inlineCode",{parentName:"a"},"babel-plugin-module-resolver")),":")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-shell"}),"yarn add --dev babel-plugin-module-resolver\n# or\nnpm install --save-dev babel-plugin-module-resolver\n")),(0,r.kt)("ol",u({},{start:3}),(0,r.kt)("li",{parentName:"ol"},"Finally, configure your ",(0,r.kt)("inlineCode",{parentName:"li"},"babel.config.js")," (note that the syntax for your ",(0,r.kt)("inlineCode",{parentName:"li"},"babel.config.js")," is different from your ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),"):")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-diff"}),"{\n  plugins: [\n+    [\n+       'module-resolver',\n+       {\n+         root: ['./src'],\n+         extensions: ['.ios.js', '.android.js', '.js', '.ts', '.tsx', '.json'],\n+         alias: {\n+           \"test/*\": [\"./test/\"],\n+         }\n+       }\n+     ]\n  ]\n}\n")))}f.isMDXComponent=!0}}]);