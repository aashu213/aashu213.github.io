"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[46013],{35318:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(k,s(s({ref:t},c),{},{components:a})):n.createElement(k,s({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},37785:function(e,t,a){var n=a(27378),r=Object.defineProperty,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,l=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;t.Z=function({children:e,hidden:t,className:a}){return n.createElement("div",((e,t)=>{for(var a in t||(t={}))s.call(t,a)&&l(e,a,t[a]);if(o)for(var a of o(t))i.call(t,a)&&l(e,a,t[a]);return e})({role:"tabpanel"},{hidden:t,className:a}),e)}},65941:function(e,t,a){a.d(t,{Z:function(){return y}});var n=a(27378),r=a(14185),o=a(40488);var s=function(){const e=(0,n.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=a(18870),l=a(38944),p="tabItem_c0e5",c=Object.defineProperty,u=Object.defineProperties,d=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,k=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,f=(e,t,a)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,C=(e,t)=>{for(var a in t||(t={}))k.call(t,a)&&f(e,a,t[a]);if(m)for(var a of m(t))h.call(t,a)&&f(e,a,t[a]);return e};function g(e){var t,a,r;const{lazy:o,block:c,defaultValue:m,values:k,groupId:h,className:f}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=null!=k?k:g.map((({props:{value:e,label:t,attributes:a}})=>({value:e,label:t,attributes:a}))),b=(0,i.lx)(y,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===m?m:null!=(r=null!=m?m:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?r:null==(a=g[0])?void 0:a.props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:A}=s(),[w,x]=(0,n.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:B}=(0,i.o5)();if(null!=h){const e=N[h];null!=e&&e!==w&&y.some((t=>t.value===e))&&x(e)}const D=e=>{const t=e.currentTarget,a=T.indexOf(t),n=y[a].value;n!==w&&(B(t),x(n),null!=h&&A(h,n))},E=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=T.indexOf(e.currentTarget)+1;t=T[a]||T[0];break}case"ArrowLeft":{const a=T.indexOf(e.currentTarget)-1;t=T[a]||T[T.length-1];break}}null==t||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},f)},y.map((({value:e,label:t,attributes:a})=>{return n.createElement("li",(r=C({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:e=>T.push(e),onKeyDown:E,onFocus:D,onClick:D},a),o={className:(0,l.Z)("tabs__item",p,null==a?void 0:a.className,{"tabs__item--active":w===e})},u(r,d(o))),null!=t?t:e);var r,o}))),o?(0,n.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},g.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function y(e){const t=(0,r.Z)();return n.createElement(g,C({key:String(t)},e))}},11674:function(e,t,a){var n=a(63445);const r=!!n.Z.canUseDOM&&navigator.platform.startsWith("Mac"),o=!!n.Z.canUseDOM&&navigator.platform.startsWith("Win"),s=r?"ios":"android",i=r?"macos":o?"windows":"linux";t.Z={defaultGuide:"quickstart",defaultOs:i,defaultPackageManager:"npm",defaultPlatform:s,defaultSyntax:"functional",defaultAndroidLanguage:"java",getDevNotesTabs:(e=["android","ios","web","windows"])=>[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean),guides:[{label:"Expo CLI Quickstart",value:"quickstart"},{label:"React Native CLI Quickstart",value:"native"}],oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],packageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],syntax:[{label:"Function Component",value:"functional"},{label:"Class Component",value:"classical"}],androidLanguages:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}]}},5512:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return h},contentTitle:function(){return f},metadata:function(){return C},toc:function(){return g},default:function(){return b}});var n=a(35318),r=a(65941),o=a(37785),s=a(11674),i=Object.defineProperty,l=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,k=(e,t)=>{for(var a in t||(t={}))u.call(t,a)&&m(e,a,t[a]);if(c)for(var a of c(t))d.call(t,a)&&m(e,a,t[a]);return e};const h={id:"intro-react",title:"React Fundamentals",description:"To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed."},f=void 0,C={unversionedId:"intro-react",id:"version-0.61/intro-react",title:"React Fundamentals",description:"To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed.",source:"@site/versioned_docs/version-0.61/intro-react.md",sourceDirName:".",slug:"/intro-react",permalink:"/docs/0.61/intro-react",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/intro-react.md",tags:[],version:"0.61",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"intro-react",title:"React Fundamentals",description:"To understand React Native fully, you need a solid foundation in React. This short introduction to React can help you get started or get refreshed."}},g=[{value:"Your first component",id:"your-first-component",children:[],level:2},{value:"JSX",id:"jsx",children:[],level:2},{value:"Custom Components",id:"custom-components",children:[{value:"Developer notes",id:"developer-notes",children:[],level:4}],level:2},{value:"Props",id:"props",children:[],level:2},{value:"State",id:"state",children:[],level:2}],y={toc:g};function b(e){var t,a=e,{components:i}=a,m=((e,t)=>{var a={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&c)for(var n of c(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=k(k({},y),m),l(t,p({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"React Native runs on ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/"}),"React"),", a popular open source library for building user interfaces with JavaScript. To make the most of React Native, it helps to understand React itself. This section can get you started or can serve as a refresher course."),(0,n.kt)("p",null,"We\u2019re going to cover the core concepts behind React:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"components"),(0,n.kt)("li",{parentName:"ul"},"JSX"),(0,n.kt)("li",{parentName:"ul"},"props"),(0,n.kt)("li",{parentName:"ul"},"state")),(0,n.kt)("p",null,"If you want to dig deeper, we encourage you to check out ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/getting-started.html"}),"React\u2019s official documentation"),"."),(0,n.kt)("h2",k({},{id:"your-first-component"}),"Your first component"),(0,n.kt)("p",null,"The rest of this introduction to React uses cats in its examples: friendly, approachable creatures that need names and a cafe to work in. Here is your very first Cat component:"),(0,n.kt)(r.Z,{groupId:"syntax",defaultValue:s.Z.defaultSyntax,values:s.Z.syntax,mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"functional",mdxType:"TabItem"},(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Your Cat","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%20%7D%20from%20'react-native'%3B%0A%0Aconst%20Cat%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CText%3EHello%2C%20I%20am%20your%20cat!%3C%2FText%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cat%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"Here is how you do it: To define your ",(0,n.kt)("inlineCode",{parentName:"p"},"Cat")," component, first use JavaScript\u2019s ",(0,n.kt)("a",k({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import"}),(0,n.kt)("inlineCode",{parentName:"a"},"import"))," to import React and React Native\u2019s ",(0,n.kt)("a",k({parentName:"p"},{href:"/docs/next/text"}),(0,n.kt)("inlineCode",{parentName:"a"},"Text"))," Core Component:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { Text } from 'react-native';\n")),(0,n.kt)("p",null,"Your component starts as a function:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"const Cat = () => {};\n")),(0,n.kt)("p",null,"You can think of components as blueprints. Whatever a function component returns is rendered as a ",(0,n.kt)("strong",{parentName:"p"},"React element.")," React elements let you describe what you want to see on the screen."),(0,n.kt)("p",null,"Here the ",(0,n.kt)("inlineCode",{parentName:"p"},"Cat")," component will render a ",(0,n.kt)("inlineCode",{parentName:"p"},"<Text>")," element:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"const Cat = () => {\n  return <Text>Hello, I am your cat!</Text>;\n};\n")),(0,n.kt)("p",null,"You can export your function component with JavaScript\u2019s ",(0,n.kt)("a",k({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export"}),(0,n.kt)("inlineCode",{parentName:"a"},"export default"))," for use throughout your app like so:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"const Cat = () => {\n  return <Text>Hello, I am your cat!</Text>;\n};\n\nexport default Cat;\n"))),(0,n.kt)(o.Z,{value:"classical",mdxType:"TabItem"},(0,n.kt)("p",null,"Class components tend to be a bit more verbose than function components."),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Your Cat","data-snack-description":"Example usage","data-snack-code":"import%20React%2C%20%7B%20Component%20%7D%20from%20'react'%3B%0Aimport%20%7B%20Text%20%7D%20from%20'react-native'%3B%0A%0Aclass%20Cat%20extends%20Component%20%7B%0A%20%20render()%20%7B%0A%20%20%20%20return%20(%0A%20%20%20%20%20%20%3CText%3EHello%2C%20I%20am%20your%20cat!%3C%2FText%3E%0A%20%20%20%20)%3B%0A%20%20%7D%0A%7D%0A%0Aexport%20default%20Cat%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"You additionally import ",(0,n.kt)("inlineCode",{parentName:"p"},"Component")," from React:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"import React, { Component } from 'react';\n")),(0,n.kt)("p",null,"Your component starts as a class extending ",(0,n.kt)("inlineCode",{parentName:"p"},"Component")," instead of as a function:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"class Cat extends Component {}\n")),(0,n.kt)("p",null,"Class components have a ",(0,n.kt)("inlineCode",{parentName:"p"},"render()")," function. Whatever is returned inside it is rendered as a React element:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"class Cat extends Component {\n  render() {\n    return <Text>Hello, I am your cat!</Text>;\n  }\n}\n")),(0,n.kt)("p",null,"And as with function components, you can export your class component:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"class Cat extends Component {\n  render() {\n    return <Text>Hello, I am your cat!</Text>;\n  }\n}\n\nexport default Cat;\n")))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This is one of many ways to export your component. This kind of export works well with the Snack Player. However, depending on your app\u2019s file structure, you might need to use a different convention. This ",(0,n.kt)("a",k({parentName:"p"},{href:"https://medium.com/dailyjs/javascript-module-cheatsheet-7bd474f1d829"}),"handy cheatsheet on JavaScript imports and exports")," can help.")),(0,n.kt)("p",null,"Now take a closer look at that ",(0,n.kt)("inlineCode",{parentName:"p"},"return")," statement. ",(0,n.kt)("inlineCode",{parentName:"p"},"<Text>Hello, I am your cat!</Text>")," is using a kind of JavaScript syntax that makes writing elements convenient: JSX."),(0,n.kt)("h2",k({},{id:"jsx"}),"JSX"),(0,n.kt)("p",null,"React and React Native use ",(0,n.kt)("strong",{parentName:"p"},"JSX,")," a syntax that lets you write elements inside JavaScript like so: ",(0,n.kt)("inlineCode",{parentName:"p"},"<Text>Hello, I am your cat!</Text>"),". The React docs have ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/jsx-in-depth.html"}),"a comprehensive guide to JSX")," you can reference to learn even more. Because JSX is JavaScript, you can use variables inside it. Here you are declaring a name for the cat, ",(0,n.kt)("inlineCode",{parentName:"p"},"name"),", and embedding it with curly braces inside ",(0,n.kt)("inlineCode",{parentName:"p"},"<Text>"),"."),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Curly Braces","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%20%7D%20from%20'react-native'%3B%0A%0Aconst%20Cat%20%3D%20()%20%3D%3E%20%7B%0A%20%20const%20name%20%3D%20%22Maru%22%3B%0A%20%20return%20(%0A%20%20%20%20%3CText%3EHello%2C%20I%20am%20%7Bname%7D!%3C%2FText%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cat%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"Any JavaScript expression will work between curly braces, including function calls like ",(0,n.kt)("inlineCode",{parentName:"p"},'{getFullName("Rum", "Tum", "Tugger")}'),":"),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Curly Braces","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%20%7D%20from%20'react-native'%3B%0A%0Aconst%20getFullName%20%3D%20(firstName%2C%20secondName%2C%20thirdName)%20%3D%3E%20%7B%0A%20%20return%20firstName%20%2B%20%22%20%22%20%2B%20secondName%20%2B%20%22%20%22%20%2B%20thirdName%3B%0A%7D%0A%0Aconst%20Cat%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CText%3E%0A%20%20%20%20%20%20Hello%2C%20I%20am%20%7BgetFullName(%22Rum%22%2C%20%22Tum%22%2C%20%22Tugger%22)%7D!%0A%20%20%20%20%3C%2FText%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cat%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"You can think of curly braces as creating a portal into JS functionality in your JSX!"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Because JSX is included in the React library, it won\u2019t work if you don\u2019t have ",(0,n.kt)("inlineCode",{parentName:"p"},"import React from 'react'")," at the top of your file!")),(0,n.kt)("h2",k({},{id:"custom-components"}),"Custom Components"),(0,n.kt)("p",null,"You\u2019ve already met ",(0,n.kt)("a",k({parentName:"p"},{href:"intro-react-native-components"}),"React Native\u2019s Core Components"),". React lets you nest these components inside each other to create new components. These nestable, reusable components are at the heart of the React paradigm."),(0,n.kt)("p",null,"For example, you can nest ",(0,n.kt)("a",k({parentName:"p"},{href:"text"}),(0,n.kt)("inlineCode",{parentName:"a"},"Text"))," and ",(0,n.kt)("a",k({parentName:"p"},{href:"textinput"}),(0,n.kt)("inlineCode",{parentName:"a"},"TextInput"))," inside a ",(0,n.kt)("a",k({parentName:"p"},{href:"view"}),(0,n.kt)("inlineCode",{parentName:"a"},"View"))," below, and React Native will render them together:"),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Custom Components","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%2C%20TextInput%2C%20View%20%7D%20from%20'react-native'%3B%0A%0Aconst%20Cat%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CText%3EHello%2C%20I%20am...%3C%2FText%3E%0A%20%20%20%20%20%20%3CTextInput%0A%20%20%20%20%20%20%20%20style%3D%7B%7B%0A%20%20%20%20%20%20%20%20%20%20height%3A%2040%2C%0A%20%20%20%20%20%20%20%20%20%20borderColor%3A%20'gray'%2C%0A%20%20%20%20%20%20%20%20%20%20borderWidth%3A%201%0A%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%20%20defaultValue%3D%22Name%20me!%22%0A%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cat%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("h4",k({},{id:"developer-notes"}),"Developer notes"),(0,n.kt)(r.Z,{groupId:"guide",defaultValue:"web",values:s.Z.getDevNotesTabs(["android","web"]),mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"web",mdxType:"TabItem"},(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"If you\u2019re familiar with web development, ",(0,n.kt)("inlineCode",{parentName:"p"},"<View>")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"<Text>")," might remind you of HTML! You can think of them as the ",(0,n.kt)("inlineCode",{parentName:"p"},"<div>")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"<p>")," tags of application development."))),(0,n.kt)(o.Z,{value:"android",mdxType:"TabItem"},(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"On Android, you usually put your views inside ",(0,n.kt)("inlineCode",{parentName:"p"},"LinearLayout"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"FrameLayout"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"RelativeLayout"),", etc. to define how the view\u2019s children will be arranged on the screen. In React Native, ",(0,n.kt)("inlineCode",{parentName:"p"},"View")," uses Flexbox for its children\u2019s layout. You can learn more in ",(0,n.kt)("a",k({parentName:"p"},{href:"flexbox"}),"our guide to layout with Flexbox"),".")))),(0,n.kt)("p",null,"You can render this component multiple times and in multiple places without repeating your code by using ",(0,n.kt)("inlineCode",{parentName:"p"},"<Cat>"),":"),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Multiple Components","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%2C%20TextInput%2C%20View%20%7D%20from%20'react-native'%3B%0A%0Aconst%20Cat%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CText%3EI%20am%20also%20a%20cat!%3C%2FText%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aconst%20Cafe%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CText%3EWelcome!%3C%2FText%3E%0A%20%20%20%20%20%20%3CCat%20%2F%3E%0A%20%20%20%20%20%20%3CCat%20%2F%3E%0A%20%20%20%20%20%20%3CCat%20%2F%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cafe%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"Any component that renders other components is a ",(0,n.kt)("strong",{parentName:"p"},"parent component.")," Here, ",(0,n.kt)("inlineCode",{parentName:"p"},"Cafe")," is the parent component and each ",(0,n.kt)("inlineCode",{parentName:"p"},"Cat")," is a ",(0,n.kt)("strong",{parentName:"p"},"child component.")),(0,n.kt)("p",null,"You can put as many cats in your cafe as you like. Each ",(0,n.kt)("inlineCode",{parentName:"p"},"<Cat>")," renders a unique element\u2014which you can customize with props."),(0,n.kt)("h2",k({},{id:"props"}),"Props"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Props")," is short for \u201cproperties.\u201d Props let you customize React components. For example, here you pass each ",(0,n.kt)("inlineCode",{parentName:"p"},"<Cat>")," a different ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," for ",(0,n.kt)("inlineCode",{parentName:"p"},"Cat")," to render:"),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Multiple Props","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%2C%20View%20%7D%20from%20'react-native'%3B%0A%0Aconst%20Cat%20%3D%20(props)%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CText%3EHello%2C%20I%20am%20%7Bprops.name%7D!%3C%2FText%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aconst%20Cafe%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CCat%20name%3D%22Maru%22%20%2F%3E%0A%20%20%20%20%20%20%3CCat%20name%3D%22Jellylorum%22%20%2F%3E%0A%20%20%20%20%20%20%3CCat%20name%3D%22Spot%22%20%2F%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cafe%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"Most of React Native\u2019s Core Components can be customized with props, too. For example, when using ",(0,n.kt)("a",k({parentName:"p"},{href:"image"}),(0,n.kt)("inlineCode",{parentName:"a"},"Image")),", you pass it a prop named ",(0,n.kt)("a",k({parentName:"p"},{href:"image#source"}),(0,n.kt)("inlineCode",{parentName:"a"},"source"))," to define what image it shows:"),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"Props","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%2C%20View%2C%20Image%20%7D%20from%20'react-native'%3B%0A%0Aconst%20CatApp%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CImage%0A%20%20%20%20%20%20%20%20source%3D%7B%7Buri%3A%20%22https%3A%2F%2Freactnative.dev%2Fdocs%2Fassets%2Fp_cat1.png%22%7D%7D%0A%20%20%20%20%20%20%20%20style%3D%7B%7Bwidth%3A%20200%2C%20height%3A%20200%7D%7D%0A%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%3CText%3EHello%2C%20I%20am%20your%20cat!%3C%2FText%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20CatApp%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Image")," has ",(0,n.kt)("a",k({parentName:"p"},{href:"image#props"}),"many different props"),", including ",(0,n.kt)("a",k({parentName:"p"},{href:"image#style"}),(0,n.kt)("inlineCode",{parentName:"a"},"style")),", which accepts a JS object of design and layout related property-value pairs."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Notice the double curly braces ",(0,n.kt)("inlineCode",{parentName:"p"},"{{ }}")," surrounding ",(0,n.kt)("inlineCode",{parentName:"p"},"style"),"\u2018s width and height. In JSX, JavaScript values are referenced with ",(0,n.kt)("inlineCode",{parentName:"p"},"{}"),". This is handy if you are passing something other than a string as props, like an array or number: ",(0,n.kt)("inlineCode",{parentName:"p"},'<Cat food={["fish", "kibble"]} age={2} />'),". However, JS objects are ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"also"))," denoted with curly braces: ",(0,n.kt)("inlineCode",{parentName:"p"},"{width: 200, height: 200}"),". Therefore, to pass a JS object in JSX, you must wrap the object in ",(0,n.kt)("strong",{parentName:"p"},"another pair")," of curly braces: ",(0,n.kt)("inlineCode",{parentName:"p"},"{{width: 200, height: 200}}"))),(0,n.kt)("p",null,"You can build many things with props and the Core Components ",(0,n.kt)("a",k({parentName:"p"},{href:"text"}),(0,n.kt)("inlineCode",{parentName:"a"},"Text")),", ",(0,n.kt)("a",k({parentName:"p"},{href:"image"}),(0,n.kt)("inlineCode",{parentName:"a"},"Image")),", and ",(0,n.kt)("a",k({parentName:"p"},{href:"view"}),(0,n.kt)("inlineCode",{parentName:"a"},"View")),"! But to build something interactive, you\u2019ll need state."),(0,n.kt)("h2",k({},{id:"state"}),"State"),(0,n.kt)("p",null,"While you can think of props as arguments you use to configure how components render, ",(0,n.kt)("strong",{parentName:"p"},"state")," is like a component\u2019s personal data storage. State is useful for handling data that changes over time or that comes from user interaction. State gives your components memory!"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"As a general rule, use props to configure a component when it renders. Use state to keep track of any component data that you expect to change over time.")),(0,n.kt)("p",null,"The following example takes place in a cat cafe where two hungry cats are waiting to be fed. Their hunger, which we expect to change over time (unlike their names), is stored as state. To feed the cats, press their buttons\u2014which will update their state."),(0,n.kt)(r.Z,{groupId:"syntax",defaultValue:s.Z.defaultSyntax,values:s.Z.syntax,mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"functional",mdxType:"TabItem"},(0,n.kt)("p",null,"You can add state to a component by calling ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/hooks-state.html"}),"React\u2019s ",(0,n.kt)("inlineCode",{parentName:"a"},"useState")," Hook"),". A Hook is a kind of function that lets you \u201chook into\u201d React features. For example, ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," is a Hook that lets you add state to function components. You can learn more about ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/hooks-intro.html"}),"other kinds of Hooks in the React documentation.")),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"State","data-snack-description":"Example usage","data-snack-code":"import%20React%2C%20%7B%20useState%20%7D%20from%20%22react%22%3B%0Aimport%20%7B%20Button%2C%20Text%2C%20View%20%7D%20from%20%22react-native%22%3B%0A%0Aconst%20Cat%20%3D%20(props)%20%3D%3E%20%7B%0A%20%20const%20%5BisHungry%2C%20setIsHungry%5D%20%3D%20useState(true)%3B%0A%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CText%3E%0A%20%20%20%20%20%20%20%20I%20am%20%7Bprops.name%7D%2C%20and%20I%20am%20%7BisHungry%20%3F%20%22hungry%22%20%3A%20%22full%22%7D!%0A%20%20%20%20%20%20%3C%2FText%3E%0A%20%20%20%20%20%20%3CButton%0A%20%20%20%20%20%20%20%20onPress%3D%7B()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setIsHungry(false)%3B%0A%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%20%20disabled%3D%7B!isHungry%7D%0A%20%20%20%20%20%20%20%20title%3D%7BisHungry%20%3F%20%22Pour%20me%20some%20milk%2C%20please!%22%20%3A%20%22Thank%20you!%22%7D%0A%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%0A%0Aconst%20Cafe%20%3D%20()%20%3D%3E%20%7B%0A%20%20return%20(%0A%20%20%20%20%3C%3E%0A%20%20%20%20%20%20%3CCat%20name%3D%22Munkustrap%22%20%2F%3E%0A%20%20%20%20%20%20%3CCat%20name%3D%22Spot%22%20%2F%3E%0A%20%20%20%20%3C%2F%3E%0A%20%20)%3B%0A%7D%0A%0Aexport%20default%20Cafe%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"First, you will want to import ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," from React like so:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"import React, { useState } from 'react';\n")),(0,n.kt)("p",null,"Then you declare the component\u2019s state by calling ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," inside its function. In this example, ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," creates an ",(0,n.kt)("inlineCode",{parentName:"p"},"isHungry")," state variable:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"const Cat = (props) => {\n  const [isHungry, setIsHungry] = useState(true);\n  // ...\n};\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"You can use ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," to track any kind of data: strings, numbers, Booleans, arrays, objects. For example, you can track the number of times a cat has been petted with ",(0,n.kt)("inlineCode",{parentName:"p"},"const [timesPetted, setTimesPetted] = useState(0)"),"!")),(0,n.kt)("p",null,"Calling ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," does two things:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it creates a \u201cstate variable\u201d with an initial value\u2014in this case the state variable is ",(0,n.kt)("inlineCode",{parentName:"li"},"isHungry")," and its initial value is ",(0,n.kt)("inlineCode",{parentName:"li"},"true")),(0,n.kt)("li",{parentName:"ul"},"it creates a function to set that state variable\u2019s value\u2014",(0,n.kt)("inlineCode",{parentName:"li"},"setIsHungry"))),(0,n.kt)("p",null,"It doesn\u2019t matter what names you use. But it can be handy to think of the pattern as ",(0,n.kt)("inlineCode",{parentName:"p"},"[<getter>, <setter>] = useState(<initialValue>)"),"."),(0,n.kt)("p",null,"Next you add the ",(0,n.kt)("a",k({parentName:"p"},{href:"button"}),(0,n.kt)("inlineCode",{parentName:"a"},"Button"))," Core Component and give it an ",(0,n.kt)("inlineCode",{parentName:"p"},"onPress")," prop:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onPress={() => {\n    setIsHungry(false);\n  }}\n  //..\n/>\n")),(0,n.kt)("p",null,"Now, when someone presses the button, ",(0,n.kt)("inlineCode",{parentName:"p"},"onPress")," will fire, calling the ",(0,n.kt)("inlineCode",{parentName:"p"},"setIsHungry(false)"),". This sets the state variable ",(0,n.kt)("inlineCode",{parentName:"p"},"isHungry")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),". When ",(0,n.kt)("inlineCode",{parentName:"p"},"isHungry")," is false, the ",(0,n.kt)("inlineCode",{parentName:"p"},"Button"),"\u2019s ",(0,n.kt)("inlineCode",{parentName:"p"},"disabled")," prop is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," and its ",(0,n.kt)("inlineCode",{parentName:"p"},"title")," also changes:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"<Button\n  //..\n  disabled={!isHungry}\n  title={isHungry ? 'Pour me some milk, please!' : 'Thank you!'}\n/>\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"You might\u2019ve noticed that although ",(0,n.kt)("inlineCode",{parentName:"p"},"isHungry")," is a ",(0,n.kt)("a",k({parentName:"p"},{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/const"}),"const"),", it is seemingly reassignable! What is happening is when a state-setting function like ",(0,n.kt)("inlineCode",{parentName:"p"},"setIsHungry")," is called, its component will re-render. In this case the ",(0,n.kt)("inlineCode",{parentName:"p"},"Cat")," function will run again\u2014and this time, ",(0,n.kt)("inlineCode",{parentName:"p"},"useState")," will give us the next value of ",(0,n.kt)("inlineCode",{parentName:"p"},"isHungry"),".")),(0,n.kt)("p",null,"Finally, put your cats inside a ",(0,n.kt)("inlineCode",{parentName:"p"},"Cafe")," component:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),'const Cafe = () => {\n  return (\n    <>\n      <Cat name="Munkustrap" />\n      <Cat name="Spot" />\n    </>\n  );\n};\n'))),(0,n.kt)(o.Z,{value:"classical",mdxType:"TabItem"},(0,n.kt)("p",null,"The older class components approach is a little different when it comes to state."),(0,n.kt)("div",k({},{className:"snack-player","data-snack-name":"State and Class Components","data-snack-description":"Example usage","data-snack-code":"import%20React%2C%20%7B%20Component%20%7D%20from%20%22react%22%3B%0Aimport%20%7B%20Button%2C%20Text%2C%20View%20%7D%20from%20%22react-native%22%3B%0A%0Aclass%20Cat%20extends%20Component%20%7B%0A%20%20state%20%3D%20%7B%20isHungry%3A%20true%20%7D%3B%0A%0A%20%20render(props)%20%7B%0A%20%20%20%20return%20(%0A%20%20%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%20%20%3CText%3E%0A%20%20%20%20%20%20%20%20%20%20I%20am%20%7Bthis.props.name%7D%2C%20and%20I%20am%0A%20%20%20%20%20%20%20%20%20%20%7Bthis.state.isHungry%20%3F%20%22%20hungry%22%20%3A%20%22%20full%22%7D!%0A%20%20%20%20%20%20%20%20%3C%2FText%3E%0A%20%20%20%20%20%20%20%20%3CButton%0A%20%20%20%20%20%20%20%20%20%20onPress%3D%7B()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.setState(%7B%20isHungry%3A%20false%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20disabled%3D%7B!this.state.isHungry%7D%0A%20%20%20%20%20%20%20%20%20%20title%3D%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.state.isHungry%20%3F%20%22Pour%20me%20some%20milk%2C%20please!%22%20%3A%20%22Thank%20you!%22%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%3C%2FView%3E%0A%20%20%20%20)%3B%0A%20%20%7D%0A%7D%0A%0Aclass%20Cafe%20extends%20Component%20%7B%0A%20%20render()%20%7B%0A%20%20%20%20return%20(%0A%20%20%20%20%20%20%3C%3E%0A%20%20%20%20%20%20%20%20%3CCat%20name%3D%22Munkustrap%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CCat%20name%3D%22Spot%22%20%2F%3E%0A%20%20%20%20%20%20%3C%2F%3E%0A%20%20%20%20)%3B%0A%20%20%7D%0A%7D%0A%0Aexport%20default%20%20Cafe%3B","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"})),(0,n.kt)("p",null,"As always with class components, you must import the ",(0,n.kt)("inlineCode",{parentName:"p"},"Component")," class from React:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"import React, { Component } from 'react';\n")),(0,n.kt)("p",null,"In class components, state is stored in a state object:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"export class Cat extends Component {\n  state = { isHungry: true };\n  //..\n}\n")),(0,n.kt)("p",null,"As with accessing props with ",(0,n.kt)("inlineCode",{parentName:"p"},"this.props"),", you access this object inside your component with ",(0,n.kt)("inlineCode",{parentName:"p"},"this.state"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"<Text>\n  I am {this.props.name}, and I am\n  {this.state.isHungry ? ' hungry' : ' full'}!\n</Text>\n")),(0,n.kt)("p",null,"And you set individual values inside the state object by passing an object with the key value pair for state and its new value to ",(0,n.kt)("inlineCode",{parentName:"p"},"this.setState()"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"<Button\n  onPress={() => {\n    this.setState({ isHungry: false });\n  }}\n  // ..\n</Button>\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Do not change your component's state directly by assigning it a new value with ",(0,n.kt)("inlineCode",{parentName:"p"},"this.state.hunger = false"),". Calling ",(0,n.kt)("inlineCode",{parentName:"p"},"this.setState()")," allows React to track changes made to state that trigger rerendering. Setting state directly can break your app's reactivity!")),(0,n.kt)("p",null,"When ",(0,n.kt)("inlineCode",{parentName:"p"},"this.state.isHungry")," is false, the ",(0,n.kt)("inlineCode",{parentName:"p"},"Button"),"\u2019s ",(0,n.kt)("inlineCode",{parentName:"p"},"disabled")," prop is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," and its ",(0,n.kt)("inlineCode",{parentName:"p"},"title")," also changes:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),"<Button\n  // ..\n  disabled={!this.state.isHungry}\n  title={\n    this.state.isHungry\n      ? 'Pour me some milk, please!'\n      : 'Thank you!'\n  }\n/>\n")),(0,n.kt)("p",null,"Finally, put your cats inside a ",(0,n.kt)("inlineCode",{parentName:"p"},"Cafe")," component:"),(0,n.kt)("pre",null,(0,n.kt)("code",k({parentName:"pre"},{className:"language-jsx"}),'class Cafe extends Component {\n  render() {\n    return (\n      <>\n        <Cat name="Munkustrap" />\n        <Cat name="Spot" />\n      </>\n    );\n  }\n}\n\nexport default Cafe;\n')))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"See the ",(0,n.kt)("inlineCode",{parentName:"p"},"<>")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"</>")," above? These bits of JSX are ",(0,n.kt)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/fragments.html"}),"fragments"),". Adjacent JSX elements must be wrapped in an enclosing tag. Fragments let you do that without nesting an extra, unnecessary wrapping element like ",(0,n.kt)("inlineCode",{parentName:"p"},"View"),".")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Now that you\u2019ve covered both React and React Native\u2019s Core Components, let\u2019s dive deeper on some of these core components by looking at ",(0,n.kt)("a",k({parentName:"p"},{href:"handling-text-input"}),"handling ",(0,n.kt)("inlineCode",{parentName:"a"},"<TextInput>")),"."))}b.isMDXComponent=!0}}]);