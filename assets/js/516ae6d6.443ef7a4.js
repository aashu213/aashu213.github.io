"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[91892],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},37785:function(e,t,n){var a=n(27378),r=Object.defineProperty,l=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;t.Z=function({children:e,hidden:t,className:n}){return a.createElement("div",((e,t)=>{for(var n in t||(t={}))i.call(t,n)&&s(e,n,t[n]);if(l)for(var n of l(t))o.call(t,n)&&s(e,n,t[n]);return e})({role:"tabpanel"},{hidden:t,className:n}),e)}},65941:function(e,t,n){n.d(t,{Z:function(){return b}});var a=n(27378),r=n(14185),l=n(40488);var i=function(){const e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=n(18870),s=n(38944),p="tabItem_c0e5",c=Object.defineProperty,u=Object.defineProperties,d=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable,h=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))g.call(t,n)&&h(e,n,t[n]);if(m)for(var n of m(t))y.call(t,n)&&h(e,n,t[n]);return e};function v(e){var t,n,r;const{lazy:l,block:c,defaultValue:m,values:g,groupId:y,className:h}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=null!=g?g:v.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),k=(0,o.lx)(b,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===m?m:null!=(r=null!=m?m:null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)?r:null==(n=v[0])?void 0:n.props.value;if(null!==w&&!b.some((e=>e.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:A}=i(),[T,j]=(0,a.useState)(w),x=[],{blockElementScrollPositionUntilNextRender:S}=(0,o.o5)();if(null!=y){const e=N[y];null!=e&&e!==T&&b.some((t=>t.value===e))&&j(e)}const O=e=>{const t=e.currentTarget,n=x.indexOf(t),a=b[n].value;a!==T&&(S(t),j(a),null!=y&&A(y,a))},C=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=x.indexOf(e.currentTarget)+1;t=x[n]||x[0];break}case"ArrowLeft":{const n=x.indexOf(e.currentTarget)-1;t=x[n]||x[x.length-1];break}}null==t||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},h)},b.map((({value:e,label:t,attributes:n})=>{return a.createElement("li",(r=f({role:"tab",tabIndex:T===e?0:-1,"aria-selected":T===e,key:e,ref:e=>x.push(e),onKeyDown:C,onFocus:O,onClick:O},n),l={className:(0,s.Z)("tabs__item",p,null==n?void 0:n.className,{"tabs__item--active":T===e})},u(r,d(l))),null!=t?t:e);var r,l}))),l?(0,a.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function b(e){const t=(0,r.Z)();return a.createElement(v,f({key:String(t)},e))}},11674:function(e,t,n){var a=n(63445);const r=!!a.Z.canUseDOM&&navigator.platform.startsWith("Mac"),l=!!a.Z.canUseDOM&&navigator.platform.startsWith("Win"),i=r?"ios":"android",o=r?"macos":l?"windows":"linux";t.Z={defaultGuide:"quickstart",defaultOs:o,defaultPackageManager:"npm",defaultPlatform:i,defaultSyntax:"functional",defaultAndroidLanguage:"java",getDevNotesTabs:(e=["android","ios","web","windows"])=>[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean),guides:[{label:"Expo CLI Quickstart",value:"quickstart"},{label:"React Native CLI Quickstart",value:"native"}],oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],packageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],syntax:[{label:"Function Component",value:"functional"},{label:"Class Component",value:"classical"}],androidLanguages:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}]}},8547:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return y},contentTitle:function(){return h},metadata:function(){return f},toc:function(){return v},default:function(){return k}});var a=n(35318),r=n(65941),l=n(37785),i=n(11674),o=Object.defineProperty,s=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&m(e,n,t[n]);if(c)for(var n of c(t))d.call(t,n)&&m(e,n,t[n]);return e};const y={id:"typescript",title:"Using TypeScript"},h=void 0,f={unversionedId:"typescript",id:"version-0.63/typescript",title:"Using TypeScript",description:"TypeScript is a language which extends JavaScript by adding type definitions, much like Flow. While React Native is built in Flow, it supports both TypeScript and Flow by default.",source:"@site/versioned_docs/version-0.63/typescript.md",sourceDirName:".",slug:"/typescript",permalink:"/docs/0.63/typescript",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/../docs/typescript.md",tags:[],version:"0.63",lastUpdatedAt:1648760516,formattedLastUpdatedAt:"4/1/2022",frontMatter:{id:"typescript",title:"Using TypeScript"},sidebar:"version-0.63/docs",previous:{title:"Using Libraries",permalink:"/docs/0.63/libraries"},next:{title:"Upgrading to new React Native versions",permalink:"/docs/0.63/upgrading"}},v=[{value:"Getting Started with TypeScript",id:"getting-started-with-typescript",children:[],level:2},{value:"Adding TypeScript to an Existing Project",id:"adding-typescript-to-an-existing-project",children:[],level:2},{value:"How TypeScript and React Native works",id:"how-typescript-and-react-native-works",children:[],level:2},{value:"What does React Native + TypeScript look like",id:"what-does-react-native--typescript-look-like",children:[],level:2},{value:"Where to Find Useful Advice",id:"where-to-find-useful-advice",children:[],level:2},{value:"Using Custom Path Aliases with TypeScript",id:"using-custom-path-aliases-with-typescript",children:[],level:2}],b={toc:v};function k(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var a in e)u.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&c)for(var a of c(e))t.indexOf(a)<0&&d.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=g(g({},b),m),s(t,p({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,(0,a.kt)("a",g({parentName:"p"},{href:"https://www.typescriptlang.org/"}),"TypeScript")," is a language which extends JavaScript by adding type definitions, much like ",(0,a.kt)("a",g({parentName:"p"},{href:"https://flow.org"}),"Flow"),". While React Native is built in Flow, it supports both TypeScript ",(0,a.kt)("em",{parentName:"p"},"and")," Flow by default."),(0,a.kt)("h2",g({},{id:"getting-started-with-typescript"}),"Getting Started with TypeScript"),(0,a.kt)("p",null,"If you're starting a new project, there are a few different ways to get started."),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("a",g({parentName:"p"},{href:"https://github.com/react-native-community/react-native-template-typescript"}),"TypeScript template"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"npx react-native init MyApp --template react-native-template-typescript\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," If the above command is failing, you may have an old version of ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native-cli")," installed globally on your system. To fix the issue try uninstalling the CLI:"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"npm uninstall -g react-native-cli")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn global remove react-native-cli"))),(0,a.kt)("p",{parentName:"blockquote"},"and then run the ",(0,a.kt)("inlineCode",{parentName:"p"},"npx")," command again.")),(0,a.kt)("p",null,"You can use ",(0,a.kt)("a",g({parentName:"p"},{href:"https://expo.io"}),"Expo")," which has two TypeScript templates:"),(0,a.kt)(r.Z,{groupId:"package-manager",defaultValue:i.Z.defaultPackageManager,values:i.Z.packageManagers,mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"npm install -g expo-cli\nexpo init MyTSProject\n"))),(0,a.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"yarn global add expo-cli\nexpo init MyTSProject\n")))),(0,a.kt)("p",null,"Or you could use ",(0,a.kt)("a",g({parentName:"p"},{href:"https://github.com/infinitered/ignite"}),"Ignite"),", which also has a TypeScript template:"),(0,a.kt)(r.Z,{groupId:"package-manager",defaultValue:i.Z.defaultPackageManager,values:i.Z.packageManagers,mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"npm install -g ignite-cli\nignite new MyTSProject\n"))),(0,a.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"yarn global add ignite-cli\nignite new MyTSProject\n")))),(0,a.kt)("h2",g({},{id:"adding-typescript-to-an-existing-project"}),"Adding TypeScript to an Existing Project"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add TypeScript and the types for React Native and Jest to your project.")),(0,a.kt)(r.Z,{groupId:"package-manager",defaultValue:i.Z.defaultPackageManager,values:i.Z.packageManagers,mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"npm install -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer\n"))),(0,a.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"yarn add -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer\n")))),(0,a.kt)("ol",g({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Add a TypeScript config file. Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," in the root of your project:")),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-json"}),'{\n  "compilerOptions": {\n    "allowJs": true,\n    "allowSyntheticDefaultImports": true,\n    "esModuleInterop": true,\n    "isolatedModules": true,\n    "jsx": "react-native",\n    "lib": ["es2017"],\n    "moduleResolution": "node",\n    "noEmit": true,\n    "strict": true,\n    "target": "esnext"\n  },\n  "exclude": [\n    "node_modules",\n    "babel.config.js",\n    "metro.config.js",\n    "jest.config.js"\n  ]\n}\n')),(0,a.kt)("ol",g({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"jest.config.js")," file to configure Jest to use TypeScript")),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-js"}),"module.exports = {\n  preset: 'react-native',\n  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']\n};\n")),(0,a.kt)("ol",g({},{start:4}),(0,a.kt)("li",{parentName:"ol"},"Rename a JavaScript file to be ",(0,a.kt)("inlineCode",{parentName:"li"},"*.tsx"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You should leave the ",(0,a.kt)("inlineCode",{parentName:"p"},"./index.js")," entrypoint file as it is otherwise you may run into an issue when it comes to bundling a production build.")),(0,a.kt)("ol",g({},{start:5}),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn tsc")," to type-check your new TypeScript files.")),(0,a.kt)("h2",g({},{id:"how-typescript-and-react-native-works"}),"How TypeScript and React Native works"),(0,a.kt)("p",null,"Out of the box, transforming your files to JavaScript works via the same ",(0,a.kt)("a",g({parentName:"p"},{href:"/docs/javascript-environment#javascript-syntax-transformers"}),"Babel infrastructure")," as a non-TypeScript React Native project. We recommend that you use the TypeScript compiler only for type checking. If you have existing TypeScript code being ported to React Native, there are ",(0,a.kt)("a",g({parentName:"p"},{href:"https://babeljs.io/docs/en/next/babel-plugin-transform-typescript"}),"one or two caveats")," to using Babel instead of TypeScript."),(0,a.kt)("h2",g({},{id:"what-does-react-native--typescript-look-like"}),"What does React Native + TypeScript look like"),(0,a.kt)("p",null,"You can provide an interface for a React Component's ",(0,a.kt)("a",g({parentName:"p"},{href:"props"}),"Props")," and ",(0,a.kt)("a",g({parentName:"p"},{href:"state"}),"State")," via ",(0,a.kt)("inlineCode",{parentName:"p"},"React.Component<Props, State>")," which will provide type-checking and editor auto-completing when working with that component in JSX."),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-tsx",metastring:'title="components/Hello.tsx"',title:'"components/Hello.tsx"'}),"import React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\n\nexport interface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\nconst Hello: React.FC<Props> = (props) => {\n  const [enthusiasmLevel, setEnthusiasmLevel] = React.useState(\n    props.enthusiasmLevel\n  );\n\n  const onIncrement = () =>\n    setEnthusiasmLevel((enthusiasmLevel || 0) + 1);\n  const onDecrement = () =>\n    setEnthusiasmLevel((enthusiasmLevel || 0) - 1);\n\n  const getExclamationMarks = (numChars: number) =>\n    Array(numChars + 1).join('!');\n  return (\n    <View style={styles.root}>\n      <Text style={styles.greeting}>\n        Hello{' '}\n        {props.name + getExclamationMarks(enthusiasmLevel || 0)}\n      </Text>\n      <View style={styles.buttons}>\n        <View style={styles.button}>\n          <Button\n            title=\"-\"\n            onPress={onDecrement}\n            accessibilityLabel=\"decrement\"\n            color=\"red\"\n          />\n        </View>\n        <View style={styles.button}>\n          <Button\n            title=\"+\"\n            onPress={onIncrement}\n            accessibilityLabel=\"increment\"\n            color=\"blue\"\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  buttons: {\n    flexDirection: 'row',\n    minHeight: 70,\n    alignItems: 'stretch',\n    alignSelf: 'center',\n    borderWidth: 5\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 0\n  },\n  greeting: {\n    color: '#999',\n    fontWeight: 'bold'\n  }\n});\n\nexport default Hello;\n")),(0,a.kt)("p",null,"You can explore the syntax more in the ",(0,a.kt)("a",g({parentName:"p"},{href:"https://www.typescriptlang.org/play/?strictNullChecks=false&esModuleInterop=true&jsx=3#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKFEljgG8AhAVxhggDsAaOAZRgCeAGyS8AFkiQweAFSQAPaXABqwJAHcAvnGy4CRdDAC0HFDGAA3JGSpUFteMA4wkUTOiRwACjjABnBio4YLhTECQALjg-GCgnAHMKShC4JGcxZj9gFD8QABkkKyEAfiiOZhAAI1ckzVtKNE4YuAAJJCEhCCjkQwA6ADEAYQAeHwh-AD44AF44AAowXz8AShmp+iCQxo5mgG00mAysnPzC9p4-KQBRdMzs3IKigF0ZxGIYXszRGDMkBaXegcjvdTkVlklNsFts1OABJDhoIjhZyvOaraZTS4wG6HO4nR7tOZzIF4h5nIRwAA+lLgAAZVgBqOAARnBkLg0PgnAAIkhEUhkfBZmi1tFrrdjmSikSSZLQe0qTT6XAjCy2ZR2Zy4PFrvI0EIUCAzMBOABZFBQADWAWF5RAgzEFr8ZQq1Sg6KmAEEoFAUAI5naHU64EzWb0AFYQJxzfAAQnw6pSRBgzCgHHm7JSw1UGmighE03oMWESD8vRwEBgmgmmZCwzkijzJcLxZEZfiRCkCWrtZSwTaHQg9HwBDqyT7E-oi3GZbCniZOuxeoNRvMZot1uJEpBBIp1LpyzHE+CwwA9A2YDWNeOJ9m1OomwWi-nS71Kqx2Dsezfjyecw-WyQFsXzLd82E4b9fyzFhwI4XsoPMGACwAIiMZD4N-TgfFLPxCx5PkkQOI8oIndA0Bw4BKmAIRgEEPIUGqIRpmQgATAiBQOdCfxIqEIE6KBmKIFiuJ4uBTyvUSz3-K8MLrf9HyA58S1Aj8IIknjhhgz9ZInRCUIZETRJCLCiD8XD6DhBFCOcYijLgMiKKomi6IY9pmKcflBUMuzGn45jKiEZgkG8qDxJ0uApPvdTb1PaT4MijRorgRMQjHMcqFPU8FL8KgtUAm0+BfcRJA+flfjmDYfwrGAokq38UBo+IOFhFwQGdAhyOcVx8C4eCGuAJreHaTAonwTqXCgHr2U0XqfzAz92rqidMBEeRuWAIgMBNDhRpwdQpu4kIQCcNoBrEGq4AAdlpWb6sa5rWva-AYmTNAxAOu6Bo4IahBGjqDm627j0qaA2KgAB1YAWMOKIAFYgeCGb2XmzhavglaFCiZkEb7MAUBYliEmUVxzDQBqohu6acY7EqEjRw7eP40aAGIAE52Y+49ME4GBwaQM6LvwEGhBYznEdmzRwSAA"}),"TypeScript playground"),"."),(0,a.kt)("h2",g({},{id:"where-to-find-useful-advice"}),"Where to Find Useful Advice"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",g({parentName:"li"},{href:"https://www.typescriptlang.org/docs/handbook/intro.html"}),"TypeScript Handbook")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",g({parentName:"li"},{href:"https://reactjs.org/docs/static-type-checking.html#typescript"}),"React's documentation on TypeScript")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",g({parentName:"li"},{href:"https://github.com/typescript-cheatsheets/react-typescript-cheatsheet#reacttypescript-cheatsheets"}),"React + TypeScript Cheatsheets")," has a good overview on how to use React with TypeScript")),(0,a.kt)("h2",g({},{id:"using-custom-path-aliases-with-typescript"}),"Using Custom Path Aliases with TypeScript"),(0,a.kt)("p",null,"To use custom path aliases with TypeScript, you need to set the path aliases to work from both Babel and TypeScript. Here's how:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Edit your ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," to have your ",(0,a.kt)("a",g({parentName:"li"},{href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping"}),"custom path mappings"),". Set anything in the root of ",(0,a.kt)("inlineCode",{parentName:"li"},"src")," to be available with no preceding path reference, and allow any test file to be accessed by using ",(0,a.kt)("inlineCode",{parentName:"li"},"tests/File.tsx"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-diff",metastring:"{2-7}","{2-7}":!0}),'    "target": "esnext",\n+     "baseUrl": ".",\n+     "paths": {\n+       "*": ["src/*"],\n+       "tests": ["tests/*"],\n+       "@components/*": ["src/components/*"],\n+     },\n    }\n')),(0,a.kt)("ol",g({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Add ",(0,a.kt)("a",g({parentName:"li"},{href:"https://github.com/tleunen/babel-plugin-module-resolver"}),(0,a.kt)("inlineCode",{parentName:"a"},"babel-plugin-module-resolver"))," as a development package to your project:")),(0,a.kt)(r.Z,{groupId:"package-manager",defaultValue:i.Z.defaultPackageManager,values:i.Z.packageManagers,mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"npm install --save-dev babel-plugin-module-resolver\n"))),(0,a.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-shell"}),"yarn add --dev babel-plugin-module-resolver\n")))),(0,a.kt)("ol",g({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"Finally, configure your ",(0,a.kt)("inlineCode",{parentName:"li"},"babel.config.js")," (note that the syntax for your ",(0,a.kt)("inlineCode",{parentName:"li"},"babel.config.js")," is different from your ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),"):")),(0,a.kt)("pre",null,(0,a.kt)("code",g({parentName:"pre"},{className:"language-diff",metastring:"{3-13}","{3-13}":!0}),"{\n  plugins: [\n+    [\n+       'module-resolver',\n+       {\n+         root: ['./src'],\n+         extensions: ['.ios.js', '.android.js', '.js', '.ts', '.tsx', '.json'],\n+         alias: {\n+           \"tests\": [\"./tests/\"],\n+           \"@components\": \"./src/components\",\n+         }\n+       }\n+     ]\n  ]\n}\n")))}k.isMDXComponent=!0}}]);